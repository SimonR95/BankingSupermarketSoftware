/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package assignment.pkg1;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Simon
 */
public class AssignmentJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AssignmentJFrame
     */
    public AssignmentJFrame() {
        initComponents();
        theEmployee = new Employee();
        accountInfo = new AccountDetails();
        BankingSoftware = new MainJFrame();
        SupermarketProducts = new ProductList();

        for (int index = 0; index < jTabbedPane.getTabCount(); index++) {
            if (!jTabbedPane.getTitleAt(index).contentEquals("Login")) {
                jTabbedPane.setEnabledAt(index, false);
            }
        }
        jTabInMemory = jTabbedPane.getComponentAt(1);
        jTabInMemory2 = jTabbedPane.getComponentAt(2);
        jTabInMemory3 = jTabbedPane.getComponentAt(3);
        jTabInMemory4 = jTabbedPane.getComponentAt(4);
        jTabInMemory5 = jTabbedPane.getComponentAt(5);
        jTabInMemory6 = jTabbedPane.getComponentAt(6);
        jTabInMemory7 = jTabbedPane.getComponentAt(7);
        jTabInMemory8 = jTabbedPane.getComponentAt(8);
        for (int i = 0; i <= 7; i++) {
            jTabbedPane.remove(1);
        }
        jTabbedPane.setSelectedIndex(0);
    }
    private java.awt.Component jTabInMemory;
    private java.awt.Component jTabInMemory2;
    private java.awt.Component jTabInMemory3;
    private java.awt.Component jTabInMemory4;
    private java.awt.Component jTabInMemory5;
    private java.awt.Component jTabInMemory6;
    private java.awt.Component jTabInMemory7;
    private java.awt.Component jTabInMemory8;
    private MainJFrame BankingSoftware;
    private Employee theEmployee;
    private AccountDetails accountInfo;
    private Product TempProduct;
    private FoodProduct TempFoodProduct;
    private ElectronicProduct TempElectronicProduct;
    private Basket TempBasketProduct;
    private ProductList SupermarketProducts;
    private String strUserName;
    private String strUserRights;
    private int count = 0;
    private int foodCount = 0;
    private int electronicCount = 0;
    Date datePurchaseDate;
    private String[] imageNames = {"book.png", "clothing.png", "furniture.png", "plate.png", "toiletries.png"};
    private String[] foodImageNames = {"beef.png", "cereal.png", "milk.png", "orangejuice.png", "pizza.png"};
    private String[] electronicImageNames = {"blackberry.png", "electricrazor.png", "iphone.png", "laptop.png", "tablet.png"};

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMainPanel = new javax.swing.JPanel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jLogin = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jUserNameTextField = new javax.swing.JTextField();
        jRegisterButton = new javax.swing.JButton();
        jLoginButton = new javax.swing.JButton();
        jRegisterInstructionsLabel = new javax.swing.JLabel();
        jRegisterExample = new javax.swing.JLabel();
        jPasswordField = new javax.swing.JPasswordField();
        jWarningLabel = new javax.swing.JLabel();
        JWarningLabel2 = new javax.swing.JLabel();
        jWarningLabel3 = new javax.swing.JLabel();
        jProductInput = new javax.swing.JPanel();
        jProductInputTabbedPane = new javax.swing.JTabbedPane();
        jGeneralProductInput = new javax.swing.JPanel();
        jProductNameLabel = new javax.swing.JLabel();
        jProductWeightLabel = new javax.swing.JLabel();
        jProductPriceLabel = new javax.swing.JLabel();
        jProductExpiryDateLabel = new javax.swing.JLabel();
        jProductDatetoOrderLabel = new javax.swing.JLabel();
        jProductNameTextField = new javax.swing.JTextField();
        jProductCategoryTextField = new javax.swing.JTextField();
        jWeightTextField = new javax.swing.JTextField();
        jPriceTextField = new javax.swing.JTextField();
        jExpiryDateTextField = new javax.swing.JTextField();
        jDateToOrderTextField = new javax.swing.JTextField();
        jAddProductButton = new javax.swing.JButton();
        jProductMinimumStockLabel = new javax.swing.JLabel();
        jMinimumStockTextField = new javax.swing.JTextField();
        jProductMaximumStockLabel = new javax.swing.JLabel();
        jProductCategoryLabel = new javax.swing.JLabel();
        jMaximumStockTextField = new javax.swing.JTextField();
        jProductManufacturerName = new javax.swing.JTextField();
        jProductManufacturerLabel = new javax.swing.JLabel();
        jImageLabel = new javax.swing.JLabel();
        jImageBackButton = new javax.swing.JButton();
        jImageForwardButton = new javax.swing.JButton();
        jSlideshowLabel = new javax.swing.JLabel();
        jFoodInput = new javax.swing.JPanel();
        jFoodProductNameLabel = new javax.swing.JLabel();
        jFoodProductWeightTypeLabel = new javax.swing.JLabel();
        jFoodProductPriceLabel = new javax.swing.JLabel();
        jFoodProductExpiryDateLabel = new javax.swing.JLabel();
        jFoodProductDatetoOrderLabel = new javax.swing.JLabel();
        jFoodNameTextField = new javax.swing.JTextField();
        jFoodCategoryTextField = new javax.swing.JTextField();
        jFoodPriceTextField = new javax.swing.JTextField();
        jFoodExpiryDateTextField = new javax.swing.JTextField();
        jFoodDateToOrderTextField = new javax.swing.JTextField();
        jAddFoodProductButton = new javax.swing.JButton();
        jFoodProductMinimumStockLabel = new javax.swing.JLabel();
        jFoodMinimumStockTextField = new javax.swing.JTextField();
        jFoodProductMaximumStockLabel = new javax.swing.JLabel();
        jFoodProductCategoryLabel = new javax.swing.JLabel();
        jFoodMaximumStockTextField = new javax.swing.JTextField();
        jFoodManufacturerName = new javax.swing.JTextField();
        jFoodProductManufacturerLabel = new javax.swing.JLabel();
        jFoodImageLabel = new javax.swing.JLabel();
        jFoodImageBackButton = new javax.swing.JButton();
        jFoodImageForwardButton = new javax.swing.JButton();
        jFoodSlideshowLabel = new javax.swing.JLabel();
        jFoodProductWeight = new javax.swing.JLabel();
        jWeightCategoryComboBox = new javax.swing.JComboBox();
        jFoodWeightTextField = new javax.swing.JTextField();
        jFoodUseByDateTextField = new javax.swing.JTextField();
        jFoodProductUseByDateLabel = new javax.swing.JLabel();
        jFoodSoldByDateTextField = new javax.swing.JTextField();
        jFoodProductSoldByDateLabel = new javax.swing.JLabel();
        jElectronicInput = new javax.swing.JPanel();
        jElectronicProductNameLabel = new javax.swing.JLabel();
        jElectronicProductWeightLabel = new javax.swing.JLabel();
        jElectronicProductPriceLabel = new javax.swing.JLabel();
        jElectronicProductExpiryDateLabel = new javax.swing.JLabel();
        jElectronicProductDatetoOrderLabel = new javax.swing.JLabel();
        jElectronicNameTextField = new javax.swing.JTextField();
        jElectronicCategoryTextField = new javax.swing.JTextField();
        jElectronicWeightTextField = new javax.swing.JTextField();
        jElectronicPriceTextField = new javax.swing.JTextField();
        jElectronicExpiryDateTextField = new javax.swing.JTextField();
        jElectronicDateToOrderTextField = new javax.swing.JTextField();
        jAddElectronicProductButton = new javax.swing.JButton();
        jElectronicProductMinimumStockLabel = new javax.swing.JLabel();
        jElectronicMinimumStockTextField = new javax.swing.JTextField();
        jElectronicProductMaximumStockLabel = new javax.swing.JLabel();
        jElectronicProductCategoryLabel = new javax.swing.JLabel();
        jElectronicMaximumStockTextField = new javax.swing.JTextField();
        jElectronicManufacturerName = new javax.swing.JTextField();
        jElectronicProductManufacturerLabel = new javax.swing.JLabel();
        jElectronicImageLabel = new javax.swing.JLabel();
        jElectronicImageBackButton = new javax.swing.JButton();
        jElectronicImageForwardButton = new javax.swing.JButton();
        jElectronicSlideshowLabel = new javax.swing.JLabel();
        jElectronicGuaranteeTextField = new javax.swing.JTextField();
        jElectronicProductGuaranteeDurationLabel = new javax.swing.JLabel();
        jShowProducts = new javax.swing.JPanel();
        jShowProductsTabbedPane = new javax.swing.JTabbedPane();
        jShowGeneralProducts = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jProductListTextArea = new javax.swing.JTextArea();
        jShowProductsButton = new javax.swing.JButton();
        jClearProductsButton = new javax.swing.JButton();
        jProductAssociatedImageLabel = new javax.swing.JLabel();
        jAssociatedImageDescriptorTextLabel = new javax.swing.JLabel();
        jProductImageIDTextField = new javax.swing.JTextField();
        jAssociatedImageButton = new javax.swing.JButton();
        jPurchaseProductIDTextField = new javax.swing.JTextField();
        jPurchaseProductAmountTextField = new javax.swing.JTextField();
        jPurchaseProductIDLabel = new javax.swing.JLabel();
        jPurchaseProductButton = new javax.swing.JButton();
        jPurchaseProductAmountLabel = new javax.swing.JLabel();
        jPurchaseProductDestinationLabel = new javax.swing.JLabel();
        jProductDestinationComboBox = new javax.swing.JComboBox();
        jShowFoodProducts = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jFoodProductListTextArea = new javax.swing.JTextArea();
        jShowFoodProductsButton = new javax.swing.JButton();
        jClearFoodProductsButton = new javax.swing.JButton();
        jFoodProductAssociatedImageLabel = new javax.swing.JLabel();
        jAssociatedFoodImageDescriptorTextLabel = new javax.swing.JLabel();
        jFoodProductImageIDTextField = new javax.swing.JTextField();
        jAssociatedFoodImageButton = new javax.swing.JButton();
        jPurchaseFoodProductAmountTextField = new javax.swing.JTextField();
        jPurchaseFoodProductIDTextField = new javax.swing.JTextField();
        jPurchaseFoodProductIDLabel = new javax.swing.JLabel();
        jPurchaseFoodProductAmountLabel = new javax.swing.JLabel();
        jPurchaseFoodProductDestinationLabel = new javax.swing.JLabel();
        jFoodProductDestinationComboBox = new javax.swing.JComboBox();
        jPurchaseFoodProductButton = new javax.swing.JButton();
        jShowElectronicProducts = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jElectronicProductListTextArea = new javax.swing.JTextArea();
        jShowElectronicProductsButton = new javax.swing.JButton();
        jClearElectronicProductsButton = new javax.swing.JButton();
        jElectronicProductAssociatedImageLabel = new javax.swing.JLabel();
        jAssociatedElectronicImageDescriptorTextLabel = new javax.swing.JLabel();
        jElectronicProductImageIDTextField = new javax.swing.JTextField();
        jAssociatedElectronicImageButton = new javax.swing.JButton();
        jPurchaseElectronicProductIDLabel = new javax.swing.JLabel();
        jPurchaseElectronicProductAmountLabel = new javax.swing.JLabel();
        jPurchaseElectronicProductAmountTextField = new javax.swing.JTextField();
        jElectronicProductDestinationComboBox = new javax.swing.JComboBox();
        jPurchaseElectronicProductDestinationLabel = new javax.swing.JLabel();
        jPurchaseElectronicProductButton = new javax.swing.JButton();
        jPurchaseElectronicProductIDTextField = new javax.swing.JTextField();
        jEditProducts = new javax.swing.JPanel();
        jEditProductsTabbedPane = new javax.swing.JTabbedPane();
        jEditGeneralProducts = new javax.swing.JPanel();
        jProductIDEditLabel = new javax.swing.JLabel();
        jEditProductIDTextField = new javax.swing.JTextField();
        jEditProduceNameLabel = new javax.swing.JLabel();
        jEditProductWeightLabel = new javax.swing.JLabel();
        jEditProductPriceLabel = new javax.swing.JLabel();
        jEditProductExpiryDateLabel = new javax.swing.JLabel();
        jEditProductDateToOrderLabel = new javax.swing.JLabel();
        jEditProductWeightTextField = new javax.swing.JTextField();
        jEditProductNameTextField = new javax.swing.JTextField();
        jEditProductPriceTextField = new javax.swing.JTextField();
        jEditProductExpiryDateTextField = new javax.swing.JTextField();
        jEditProductDateToOrderTextField = new javax.swing.JTextField();
        jEditProductButton = new javax.swing.JButton();
        jRemoveProductButton = new javax.swing.JButton();
        jEditProductMinimumStockTextField = new javax.swing.JTextField();
        jEditProductMinimumStockLabel = new javax.swing.JLabel();
        jEditProductCategoryTextField = new javax.swing.JTextField();
        jEditProductCategoryLabel = new javax.swing.JLabel();
        jProductIDEditBlankLabel = new javax.swing.JLabel();
        jEditFoodProducts = new javax.swing.JPanel();
        jFoodProductIDEditLabel = new javax.swing.JLabel();
        jEditFoodProductIDTextField = new javax.swing.JTextField();
        jEditProduceNameLabel1 = new javax.swing.JLabel();
        jEditFoodProductWeightLabel = new javax.swing.JLabel();
        jEditFoodProductPriceLabel = new javax.swing.JLabel();
        jEditFoodProductExpiryDateLabel = new javax.swing.JLabel();
        jEditFoodProductDateToOrderLabel = new javax.swing.JLabel();
        jEditFoodProductWeightTextField = new javax.swing.JTextField();
        jEditFoodProductNameTextField = new javax.swing.JTextField();
        jEditFoodProductPriceTextField = new javax.swing.JTextField();
        jEditFoodProductExpiryDateTextField = new javax.swing.JTextField();
        jEditFoodProductDateToOrderTextField = new javax.swing.JTextField();
        jEditFoodProductButton = new javax.swing.JButton();
        jRemoveFoodProductButton = new javax.swing.JButton();
        jEditFoodProductMinimumStockTextField = new javax.swing.JTextField();
        jEditFoodProductMinimumStockLabel = new javax.swing.JLabel();
        jEditFoodProductCategoryTextField = new javax.swing.JTextField();
        jEditFoodProductCategoryLabel = new javax.swing.JLabel();
        jFoodProductIDEditBlankLabel = new javax.swing.JLabel();
        jEditWeightCategoryComboBox = new javax.swing.JComboBox();
        jEditFoodProductWeightCategoryLabel = new javax.swing.JLabel();
        jEditFoodProductUseByDateTextField = new javax.swing.JTextField();
        jEditFoodProductUseByDateLabel = new javax.swing.JLabel();
        jEditFoodProductSoldByDateTextField = new javax.swing.JTextField();
        jEditFoodProductSoldByDateLabel = new javax.swing.JLabel();
        jEditElectronicProducts = new javax.swing.JPanel();
        jElectronicProductIDEditLabel = new javax.swing.JLabel();
        jEditElectronicProductIDTextField = new javax.swing.JTextField();
        jEditElectronicProduceNameLabel = new javax.swing.JLabel();
        jEditElectronicProductWeightLabel = new javax.swing.JLabel();
        jEditElectronicProductPriceLabel = new javax.swing.JLabel();
        jEditElectronicProductExpiryDateLabel = new javax.swing.JLabel();
        jEditElectronicProductDateToOrderLabel = new javax.swing.JLabel();
        jEditElectronicProductWeightTextField = new javax.swing.JTextField();
        jEditElectronicProductNameTextField = new javax.swing.JTextField();
        jEditElectronicProductPriceTextField = new javax.swing.JTextField();
        jEditElectronicProductExpiryDateTextField = new javax.swing.JTextField();
        jEditElectronicProductDateToOrderTextField = new javax.swing.JTextField();
        jEditElectronicProductButton = new javax.swing.JButton();
        jRemoveElectronicProductButton = new javax.swing.JButton();
        jEditElectronicProductMinimumStockTextField = new javax.swing.JTextField();
        jEditElectronicProductMinimumStockLabel = new javax.swing.JLabel();
        jEditElectronicProductCategoryTextField = new javax.swing.JTextField();
        jEditElectronicProductCategoryLabel = new javax.swing.JLabel();
        jElectronicProductIDEditBlankLabel = new javax.swing.JLabel();
        jEditElectronicProductGuaranteeTextField = new javax.swing.JTextField();
        jEditEletronicProductGuaranteeLabel = new javax.swing.JLabel();
        jOrderProducts = new javax.swing.JPanel();
        jProductIDOrderLabel = new javax.swing.JLabel();
        jOrderProductAmountLabel = new javax.swing.JLabel();
        jOrderProductIDTextField = new javax.swing.JTextField();
        jAmountToBeOrderedTextField = new javax.swing.JTextField();
        jOrderProductButton = new javax.swing.JButton();
        jOrderCheckButton = new javax.swing.JButton();
        jDeliveryCompanyTextField = new javax.swing.JTextField();
        jDeliveryCompanyLabel = new javax.swing.JLabel();
        jOrderTimeLabel = new javax.swing.JLabel();
        jManufacturerStreetTextField = new javax.swing.JTextField();
        jManufacturerStreetLabel = new javax.swing.JLabel();
        jManufacturerHouseNumberTextField = new javax.swing.JTextField();
        jManufacturerHouseNoLabel = new javax.swing.JLabel();
        jManufacturerTownTextField = new javax.swing.JTextField();
        jManufacturerTownLabel = new javax.swing.JLabel();
        jManufacturerAreaTextField = new javax.swing.JTextField();
        jManufacturerAreaLabel = new javax.swing.JLabel();
        jManufacturerPostcodeLabel = new javax.swing.JLabel();
        jManufacturerPostcodeTextField = new javax.swing.JTextField();
        jManufacturerCountryTextField = new javax.swing.JTextField();
        jManufacturerCountryLabel = new javax.swing.JLabel();
        jManufacturerAddressRequestLabel = new javax.swing.JLabel();
        jProductIDOrderLabel1 = new javax.swing.JLabel();
        jOrderTypeOfProductComboBox = new javax.swing.JComboBox();
        jOrderBankingSoftwareButton = new javax.swing.JButton();
        jOrderHistory = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jOrderedProductsTextArea = new javax.swing.JTextArea();
        jShowOrdersButton = new javax.swing.JButton();
        jClearOrderHistoryButton = new javax.swing.JButton();
        jBasket = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jBasketTextArea = new javax.swing.JTextArea();
        jBasketLabel = new javax.swing.JLabel();
        jBasketIDTextField = new javax.swing.JTextField();
        jBasketProductIDLabel = new javax.swing.JLabel();
        jBasketModifyAmountButton = new javax.swing.JButton();
        jBasketProductQuantityLabel = new javax.swing.JLabel();
        jBasketQuantityTextField = new javax.swing.JTextField();
        jBasketRemoveButton = new javax.swing.JButton();
        jDisplayBasketButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jWishlistTextArea = new javax.swing.JTextArea();
        jWishlistLabel = new javax.swing.JLabel();
        jDisplayWishlistButton = new javax.swing.JButton();
        jWishlistIDTextField = new javax.swing.JTextField();
        jWishlistProductIDLabel = new javax.swing.JLabel();
        jWishlistModifyAmountButton = new javax.swing.JButton();
        jWishlistQuantityTextField = new javax.swing.JTextField();
        jWishlistProductQuantityLabel = new javax.swing.JLabel();
        jWishlistRemoveButton = new javax.swing.JButton();
        jWishlistTransferButton = new javax.swing.JButton();
        jCheckoutButton = new javax.swing.JButton();
        jAccount = new javax.swing.JPanel();
        jPurchaseHistoryLabel = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jPurchaseHistoryTextArea = new javax.swing.JTextArea();
        jAccountDetailsLabel = new javax.swing.JLabel();
        jAccountDetailsFirstNameLabel = new javax.swing.JLabel();
        jAccountDetailsLastNameLabel = new javax.swing.JLabel();
        jAccountDetailsAddressLabel = new javax.swing.JLabel();
        jAccountDetailsCityLabel = new javax.swing.JLabel();
        jAccountDetailsPostcodeLabel = new javax.swing.JLabel();
        jAccountDetailsCountryLabel = new javax.swing.JLabel();
        jAccountDetailsPhoneNumberLabel = new javax.swing.JLabel();
        jAccountDetailsAccountNumberLabel = new javax.swing.JLabel();
        jCheckout = new javax.swing.JPanel();
        jFirstNameLabel = new javax.swing.JLabel();
        jFirstNameTextField = new javax.swing.JTextField();
        jLastNameTextField = new javax.swing.JTextField();
        jLastNameLabel = new javax.swing.JLabel();
        jCityTextField = new javax.swing.JTextField();
        jCityLabel = new javax.swing.JLabel();
        jPostCodeTextField = new javax.swing.JLabel();
        jPostcodeTextField = new javax.swing.JTextField();
        jAddressTextField = new javax.swing.JTextField();
        jAddressLabel = new javax.swing.JLabel();
        jPhoneNumberTextField = new javax.swing.JTextField();
        jCountryLabel = new javax.swing.JLabel();
        jPhoneNumberLabel = new javax.swing.JLabel();
        jTransactionButton = new javax.swing.JButton();
        jTotalPriceLabel = new javax.swing.JLabel();
        jUniqueProductsLabel = new javax.swing.JLabel();
        jTotalQuantityLabel = new javax.swing.JLabel();
        jCountryComboBox = new javax.swing.JComboBox();
        jPurchaseDateLabel = new javax.swing.JLabel();
        jAccountNumberLabel = new javax.swing.JLabel();
        jAccountNumberTextField = new javax.swing.JTextField();
        jOpenBankingSoftwareButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMainPanel.setBackground(new java.awt.Color(0, 204, 255));

        jLabel1.setText("Username:");

        jLabel2.setText("Password:");

        jRegisterButton.setText("Register");
        jRegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRegisterButtonActionPerformed(evt);
            }
        });

        jLoginButton.setText("Login");
        jLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLoginButtonActionPerformed(evt);
            }
        });

        jRegisterInstructionsLabel.setText("Please append your Username with ':Employee' to receive Employee rights, ':Customer' to receive Customer rights, and ':Administrator' to receive Administrator rights");

        jRegisterExample.setText("E.g A user registered with the UserName: 'TestUser:Administrator' will receive Administrator rights when logged in");

        jWarningLabel.setText("WARNING: When asked to input information, do NOT use commas");

        JWarningLabel2.setText("This program uses commas to differentiate between attributes");

        jWarningLabel3.setText("inside it's .txt file, meaning input commas will crash the system");

        javax.swing.GroupLayout jLoginLayout = new javax.swing.GroupLayout(jLogin);
        jLogin.setLayout(jLoginLayout);
        jLoginLayout.setHorizontalGroup(
            jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginLayout.createSequentialGroup()
                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLoginLayout.createSequentialGroup()
                        .addContainerGap(181, Short.MAX_VALUE)
                        .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLoginLayout.createSequentialGroup()
                                .addComponent(jRegisterButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLoginButton)
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLoginLayout.createSequentialGroup()
                                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(16, 16, 16)))
                        .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jWarningLabel3)
                            .addComponent(jWarningLabel)
                            .addComponent(JWarningLabel2))
                        .addGap(11, 11, 11))
                    .addComponent(jRegisterExample, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRegisterInstructionsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLoginLayout.setVerticalGroup(
            jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLoginLayout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWarningLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2))
                    .addComponent(JWarningLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLoginButton)
                        .addComponent(jRegisterButton))
                    .addComponent(jWarningLabel3))
                .addGap(38, 38, 38)
                .addComponent(jRegisterInstructionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRegisterExample, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Login", jLogin);

        jProductNameLabel.setText("Product Name");

        jProductWeightLabel.setText("Weight (kg)");

        jProductPriceLabel.setText("Non-VAT Price (£)");

        jProductExpiryDateLabel.setText("Expiry Date (dd-mm-yyyy)");

        jProductDatetoOrderLabel.setText("Date to Order (dd-mm-yyyy)");

        jAddProductButton.setText("Add to Product List");
        jAddProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddProductButtonActionPerformed(evt);
            }
        });

        jProductMinimumStockLabel.setText("Minimum Stock");

        jProductMaximumStockLabel.setText("Maximum Stock");

        jProductCategoryLabel.setText("Product Category");

        jProductManufacturerLabel.setText("Product Manufacturer");

        jImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment/pkg1/images/book.png"))); // NOI18N
        jImageLabel.setText("jLabel3");

        jImageBackButton.setText("<");
        jImageBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImageBackButtonActionPerformed(evt);
            }
        });

        jImageForwardButton.setText(">");
        jImageForwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jImageForwardButtonActionPerformed(evt);
            }
        });

        jSlideshowLabel.setText("Please select an image fitting for the product");

        javax.swing.GroupLayout jGeneralProductInputLayout = new javax.swing.GroupLayout(jGeneralProductInput);
        jGeneralProductInput.setLayout(jGeneralProductInputLayout);
        jGeneralProductInputLayout.setHorizontalGroup(
            jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGeneralProductInputLayout.createSequentialGroup()
                .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                            .addGap(89, 89, 89)
                            .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jProductCategoryLabel)
                                .addComponent(jProductNameLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                            .addGap(314, 314, 314)
                            .addComponent(jAddProductButton)))
                    .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductManufacturerLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jProductManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductWeightLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductPriceLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductExpiryDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductDatetoOrderLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductMinimumStockLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                                .addComponent(jProductMaximumStockLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSlideshowLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jGeneralProductInputLayout.createSequentialGroup()
                            .addComponent(jImageBackButton)
                            .addGap(118, 118, 118)
                            .addComponent(jImageForwardButton))))
                .addGap(41, 41, 41))
        );
        jGeneralProductInputLayout.setVerticalGroup(
            jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductCategoryLabel)
                            .addComponent(jProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jProductManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductManufacturerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductWeightLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductPriceLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductExpiryDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductDatetoOrderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductMinimumStockLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jProductMaximumStockLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAddProductButton))
                    .addGroup(jGeneralProductInputLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jImageLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jGeneralProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jImageBackButton)
                            .addComponent(jImageForwardButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlideshowLabel)))
                .addContainerGap(313, Short.MAX_VALUE))
        );

        jProductInputTabbedPane.addTab("Enter General Product", jGeneralProductInput);

        jFoodProductNameLabel.setText("Product Name");

        jFoodProductWeightTypeLabel.setText("Weight Category");

        jFoodProductPriceLabel.setText("Non-VAT Price (£)");

        jFoodProductExpiryDateLabel.setText("Expiry Date (dd-mm-yyyy)");

        jFoodProductDatetoOrderLabel.setText("Date to Order (dd-mm-yyyy)");

        jAddFoodProductButton.setText("Add to Food Product List");
        jAddFoodProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddFoodProductButtonActionPerformed(evt);
            }
        });

        jFoodProductMinimumStockLabel.setText("Minimum Stock");

        jFoodProductMaximumStockLabel.setText("Maximum Stock");

        jFoodProductCategoryLabel.setText("Product Category");

        jFoodProductManufacturerLabel.setText("Product Manufacturer");

        jFoodImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment/pkg1/foodimages/beef.png"))); // NOI18N
        jFoodImageLabel.setText("jLabel3");

        jFoodImageBackButton.setText("<");
        jFoodImageBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFoodImageBackButtonActionPerformed(evt);
            }
        });

        jFoodImageForwardButton.setText(">");
        jFoodImageForwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFoodImageForwardButtonActionPerformed(evt);
            }
        });

        jFoodSlideshowLabel.setText("Please select an image fitting for the product");

        jFoodProductWeight.setText("Weight");

        jWeightCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grams", "Pounds", "Kilograms", "Litres", "Pints" }));

        jFoodProductUseByDateLabel.setText("Use By Date (dd-mm-yyyy)");

        jFoodProductSoldByDateLabel.setText("Sold By Date (dd-mm-yyyy)");

        javax.swing.GroupLayout jFoodInputLayout = new javax.swing.GroupLayout(jFoodInput);
        jFoodInput.setLayout(jFoodInputLayout);
        jFoodInputLayout.setHorizontalGroup(
            jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFoodInputLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jAddFoodProductButton)
                    .addGroup(jFoodInputLayout.createSequentialGroup()
                        .addComponent(jFoodProductMaximumStockLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFoodMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFoodInputLayout.createSequentialGroup()
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jFoodProductWeight)
                            .addComponent(jFoodProductExpiryDateLabel)
                            .addComponent(jFoodProductDatetoOrderLabel)
                            .addComponent(jFoodProductUseByDateLabel)
                            .addComponent(jFoodProductPriceLabel)
                            .addComponent(jFoodProductWeightTypeLabel)
                            .addComponent(jFoodProductManufacturerLabel)
                            .addComponent(jFoodProductCategoryLabel)
                            .addComponent(jFoodProductNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jFoodWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodUseByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jWeightCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jFoodInputLayout.createSequentialGroup()
                        .addComponent(jFoodProductMinimumStockLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFoodMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFoodInputLayout.createSequentialGroup()
                        .addComponent(jFoodProductSoldByDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFoodSoldByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 170, Short.MAX_VALUE)
                .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jFoodImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jFoodInputLayout.createSequentialGroup()
                            .addComponent(jFoodImageBackButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jFoodImageForwardButton)))
                    .addComponent(jFoodSlideshowLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(41, 41, 41))
        );
        jFoodInputLayout.setVerticalGroup(
            jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFoodInputLayout.createSequentialGroup()
                .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFoodInputLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jFoodImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodImageBackButton)
                            .addComponent(jFoodImageForwardButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFoodSlideshowLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFoodInputLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodProductNameLabel)
                            .addComponent(jFoodNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductCategoryLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductManufacturerLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jWeightCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductWeightTypeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductWeight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodProductPriceLabel)
                            .addComponent(jFoodPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodProductExpiryDateLabel)
                            .addComponent(jFoodExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductDatetoOrderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodUseByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductUseByDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodSoldByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFoodProductSoldByDateLabel))
                        .addGap(2, 2, 2)))
                .addGap(6, 6, 6)
                .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFoodProductMinimumStockLabel)
                    .addComponent(jFoodMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jFoodInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFoodMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFoodProductMaximumStockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAddFoodProductButton)
                .addContainerGap(199, Short.MAX_VALUE))
        );

        jProductInputTabbedPane.addTab("Enter Food Product", jFoodInput);

        jElectronicProductNameLabel.setText("Product Name");

        jElectronicProductWeightLabel.setText("Weight (kg)");

        jElectronicProductPriceLabel.setText("Non-VAT Price (£)");

        jElectronicProductExpiryDateLabel.setText("Expiry Date (dd-mm-yyyy)");

        jElectronicProductDatetoOrderLabel.setText("Date to Order (dd-mm-yyyy)");

        jAddElectronicProductButton.setText("Add to Electronic Product List");
        jAddElectronicProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddElectronicProductButtonActionPerformed(evt);
            }
        });

        jElectronicProductMinimumStockLabel.setText("Minimum Stock");

        jElectronicProductMaximumStockLabel.setText("Maximum Stock");

        jElectronicProductCategoryLabel.setText("Product Category");

        jElectronicProductManufacturerLabel.setText("Product Manufacturer");

        jElectronicImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assignment/pkg1/electronicimages/blackberry.png"))); // NOI18N
        jElectronicImageLabel.setText("jLabel3");

        jElectronicImageBackButton.setText("<");
        jElectronicImageBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jElectronicImageBackButtonActionPerformed(evt);
            }
        });

        jElectronicImageForwardButton.setText(">");
        jElectronicImageForwardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jElectronicImageForwardButtonActionPerformed(evt);
            }
        });

        jElectronicSlideshowLabel.setText("Please select an image fitting for the product");

        jElectronicProductGuaranteeDurationLabel.setText("Guarantee Duration (days)");

        javax.swing.GroupLayout jElectronicInputLayout = new javax.swing.GroupLayout(jElectronicInput);
        jElectronicInput.setLayout(jElectronicInputLayout);
        jElectronicInputLayout.setHorizontalGroup(
            jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jElectronicInputLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jElectronicProductCategoryLabel)
                            .addComponent(jElectronicProductNameLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jElectronicNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jElectronicCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductManufacturerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductWeightLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductPriceLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jAddElectronicProductButton)
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductMaximumStockLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductMinimumStockLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductDatetoOrderLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductExpiryDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jElectronicInputLayout.createSequentialGroup()
                        .addComponent(jElectronicProductGuaranteeDurationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jElectronicGuaranteeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 170, Short.MAX_VALUE)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jElectronicSlideshowLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jElectronicImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jElectronicInputLayout.createSequentialGroup()
                            .addComponent(jElectronicImageBackButton)
                            .addGap(118, 118, 118)
                            .addComponent(jElectronicImageForwardButton))))
                .addGap(41, 41, 41))
        );
        jElectronicInputLayout.setVerticalGroup(
            jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jElectronicInputLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jElectronicImageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicImageBackButton)
                    .addComponent(jElectronicImageForwardButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jElectronicSlideshowLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jElectronicInputLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicProductCategoryLabel)
                    .addComponent(jElectronicCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicManufacturerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductManufacturerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductWeightLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicGuaranteeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductGuaranteeDurationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductExpiryDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductDatetoOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductMinimumStockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jElectronicInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicMaximumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jElectronicProductMaximumStockLabel))
                .addGap(18, 18, 18)
                .addComponent(jAddElectronicProductButton)
                .addGap(260, 260, 260))
        );

        jProductInputTabbedPane.addTab("Enter Electronic Product", jElectronicInput);

        javax.swing.GroupLayout jProductInputLayout = new javax.swing.GroupLayout(jProductInput);
        jProductInput.setLayout(jProductInputLayout);
        jProductInputLayout.setHorizontalGroup(
            jProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProductInputTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jProductInputLayout.setVerticalGroup(
            jProductInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jProductInputTabbedPane)
        );

        jTabbedPane.addTab("Product Input", jProductInput);

        jProductListTextArea.setEditable(false);
        jProductListTextArea.setColumns(20);
        jProductListTextArea.setRows(5);
        jScrollPane1.setViewportView(jProductListTextArea);

        jShowProductsButton.setText("Show Products");
        jShowProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowProductsButtonActionPerformed(evt);
            }
        });

        jClearProductsButton.setText("Clear Products");
        jClearProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearProductsButtonActionPerformed(evt);
            }
        });

        jAssociatedImageDescriptorTextLabel.setText("Enter Product ID to view associated Image:");

        jAssociatedImageButton.setText("View Image");
        jAssociatedImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAssociatedImageButtonActionPerformed(evt);
            }
        });

        jPurchaseProductIDLabel.setText("Enter Product ID:");

        jPurchaseProductButton.setText("Add");
        jPurchaseProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPurchaseProductButtonActionPerformed(evt);
            }
        });

        jPurchaseProductAmountLabel.setText("Amount:");

        jPurchaseProductDestinationLabel.setText("Destination");

        jProductDestinationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Basket", "Wishlist" }));

        javax.swing.GroupLayout jShowGeneralProductsLayout = new javax.swing.GroupLayout(jShowGeneralProducts);
        jShowGeneralProducts.setLayout(jShowGeneralProductsLayout);
        jShowGeneralProductsLayout.setHorizontalGroup(
            jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowGeneralProductsLayout.createSequentialGroup()
                .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jAssociatedImageDescriptorTextLabel)
                                    .addComponent(jPurchaseProductIDLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPurchaseProductAmountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPurchaseProductDestinationLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPurchaseProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPurchaseProductIDTextField)
                                        .addComponent(jProductImageIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE))
                                    .addComponent(jProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPurchaseProductButton)))
                            .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                                .addGap(0, 505, Short.MAX_VALUE)
                                .addComponent(jAssociatedImageButton)))
                        .addGap(18, 18, 18)
                        .addComponent(jProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                        .addGap(103, 131, Short.MAX_VALUE)
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                                .addComponent(jShowProductsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jClearProductsButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(43, 43, 43))
        );
        jShowGeneralProductsLayout.setVerticalGroup(
            jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                        .addComponent(jClearProductsButton)
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowGeneralProductsLayout.createSequentialGroup()
                        .addComponent(jShowProductsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAssociatedImageDescriptorTextLabel)
                            .addComponent(jProductImageIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAssociatedImageButton)
                        .addGap(11, 11, 11)
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseProductIDLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseProductAmountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseProductDestinationLabel)
                            .addComponent(jProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPurchaseProductButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jShowGeneralProductsLayout.createSequentialGroup()
                        .addComponent(jProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jShowProductsTabbedPane.addTab("List of General Products", jShowGeneralProducts);

        jFoodProductListTextArea.setEditable(false);
        jFoodProductListTextArea.setColumns(20);
        jFoodProductListTextArea.setRows(5);
        jScrollPane3.setViewportView(jFoodProductListTextArea);

        jShowFoodProductsButton.setText("Show Food Products");
        jShowFoodProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowFoodProductsButtonActionPerformed(evt);
            }
        });

        jClearFoodProductsButton.setText("Clear Food Products");
        jClearFoodProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearFoodProductsButtonActionPerformed(evt);
            }
        });

        jAssociatedFoodImageDescriptorTextLabel.setText("Enter Food Product ID to view associated Image:");

        jAssociatedFoodImageButton.setText("View Image");
        jAssociatedFoodImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAssociatedFoodImageButtonActionPerformed(evt);
            }
        });

        jPurchaseFoodProductIDLabel.setText("Enter Product ID:");

        jPurchaseFoodProductAmountLabel.setText("Amount:");

        jPurchaseFoodProductDestinationLabel.setText("Destination");

        jFoodProductDestinationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Basket", "Wishlist" }));

        jPurchaseFoodProductButton.setText("Add");
        jPurchaseFoodProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPurchaseFoodProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jShowFoodProductsLayout = new javax.swing.GroupLayout(jShowFoodProducts);
        jShowFoodProducts.setLayout(jShowFoodProductsLayout);
        jShowFoodProductsLayout.setHorizontalGroup(
            jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowFoodProductsLayout.createSequentialGroup()
                .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowFoodProductsLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowFoodProductsLayout.createSequentialGroup()
                                .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPurchaseFoodProductAmountLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jPurchaseFoodProductDestinationLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPurchaseFoodProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jFoodProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jPurchaseFoodProductButton))
                                .addGap(129, 129, 129))
                            .addComponent(jAssociatedFoodImageButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowFoodProductsLayout.createSequentialGroup()
                                .addComponent(jAssociatedFoodImageDescriptorTextLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFoodProductImageIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowFoodProductsLayout.createSequentialGroup()
                                .addComponent(jPurchaseFoodProductIDLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPurchaseFoodProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jFoodProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowFoodProductsLayout.createSequentialGroup()
                        .addGap(0, 133, Short.MAX_VALUE)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jShowFoodProductsLayout.createSequentialGroup()
                                .addComponent(jShowFoodProductsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jClearFoodProductsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
        );
        jShowFoodProductsLayout.setVerticalGroup(
            jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jShowFoodProductsLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClearFoodProductsButton)
                    .addComponent(jShowFoodProductsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowFoodProductsLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAssociatedFoodImageDescriptorTextLabel)
                            .addComponent(jFoodProductImageIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAssociatedFoodImageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseFoodProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseFoodProductIDLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseFoodProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseFoodProductAmountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jFoodProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseFoodProductDestinationLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPurchaseFoodProductButton))
                    .addComponent(jFoodProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        jShowProductsTabbedPane.addTab("List of Food Products", jShowFoodProducts);

        jElectronicProductListTextArea.setEditable(false);
        jElectronicProductListTextArea.setColumns(20);
        jElectronicProductListTextArea.setRows(5);
        jScrollPane4.setViewportView(jElectronicProductListTextArea);

        jShowElectronicProductsButton.setText("Show Electronic Products");
        jShowElectronicProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowElectronicProductsButtonActionPerformed(evt);
            }
        });

        jClearElectronicProductsButton.setText("Clear Electronic Products");
        jClearElectronicProductsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearElectronicProductsButtonActionPerformed(evt);
            }
        });

        jAssociatedElectronicImageDescriptorTextLabel.setText("Enter Electronic Product ID to view associated Image:");

        jAssociatedElectronicImageButton.setText("View Image");
        jAssociatedElectronicImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAssociatedElectronicImageButtonActionPerformed(evt);
            }
        });

        jPurchaseElectronicProductIDLabel.setText("Enter Product ID:");

        jPurchaseElectronicProductAmountLabel.setText("Amount:");

        jElectronicProductDestinationComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Basket", "Wishlist" }));

        jPurchaseElectronicProductDestinationLabel.setText("Destination");

        jPurchaseElectronicProductButton.setText("Add");
        jPurchaseElectronicProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPurchaseElectronicProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jShowElectronicProductsLayout = new javax.swing.GroupLayout(jShowElectronicProducts);
        jShowElectronicProducts.setLayout(jShowElectronicProductsLayout);
        jShowElectronicProductsLayout.setHorizontalGroup(
            jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jShowElectronicProductsLayout.createSequentialGroup()
                .addGap(0, 128, Short.MAX_VALUE)
                .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                        .addComponent(jShowElectronicProductsButton)
                        .addGap(375, 375, 375)
                        .addComponent(jClearElectronicProductsButton))
                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 679, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                                .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jAssociatedElectronicImageButton)
                                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                                        .addComponent(jAssociatedElectronicImageDescriptorTextLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jElectronicProductImageIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jPurchaseElectronicProductAmountLabel)
                                            .addComponent(jPurchaseElectronicProductIDLabel)
                                            .addComponent(jPurchaseElectronicProductDestinationLabel))
                                        .addGap(4, 4, 4)
                                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jPurchaseElectronicProductAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jElectronicProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jPurchaseElectronicProductButton)
                                            .addComponent(jPurchaseElectronicProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jElectronicProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(41, 41, 41))
        );
        jShowElectronicProductsLayout.setVerticalGroup(
            jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jClearElectronicProductsButton)
                    .addComponent(jShowElectronicProductsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jAssociatedElectronicImageDescriptorTextLabel)
                            .addComponent(jElectronicProductImageIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAssociatedElectronicImageButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseElectronicProductIDLabel)
                            .addComponent(jPurchaseElectronicProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPurchaseElectronicProductAmountTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPurchaseElectronicProductAmountLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jShowElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPurchaseElectronicProductDestinationLabel)
                            .addComponent(jElectronicProductDestinationComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPurchaseElectronicProductButton)
                        .addGap(82, 82, 82))
                    .addGroup(jShowElectronicProductsLayout.createSequentialGroup()
                        .addComponent(jElectronicProductAssociatedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
        );

        jShowProductsTabbedPane.addTab("List of Electronic Products", jShowElectronicProducts);

        javax.swing.GroupLayout jShowProductsLayout = new javax.swing.GroupLayout(jShowProducts);
        jShowProducts.setLayout(jShowProductsLayout);
        jShowProductsLayout.setHorizontalGroup(
            jShowProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 868, Short.MAX_VALUE)
            .addGroup(jShowProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jShowProductsLayout.createSequentialGroup()
                    .addComponent(jShowProductsTabbedPane)
                    .addContainerGap()))
        );
        jShowProductsLayout.setVerticalGroup(
            jShowProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
            .addGroup(jShowProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jShowProductsTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING))
        );

        jTabbedPane.addTab("Show Products", jShowProducts);

        jProductIDEditLabel.setText("Please enter the ID of the General Product you wish to alter:");

        jEditProduceNameLabel.setText("New Product Name:");

        jEditProductWeightLabel.setText("New Product Weight (kg):");

        jEditProductPriceLabel.setText("New Product Price (£):");

        jEditProductExpiryDateLabel.setText("New Product Expiry Date (dd/mm/yyyy:");

        jEditProductDateToOrderLabel.setText("New Product Date to Order (dd/mm/yyyy):");

        jEditProductButton.setText("Edit Product");
        jEditProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditProductButtonActionPerformed(evt);
            }
        });

        jRemoveProductButton.setText("Remove Product");
        jRemoveProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveProductButtonActionPerformed(evt);
            }
        });

        jEditProductMinimumStockLabel.setText("New Product Minimum Stock:");

        jEditProductCategoryLabel.setText("New Product Category:");

        jProductIDEditBlankLabel.setText("Leave Fields blank to retain original values");

        javax.swing.GroupLayout jEditGeneralProductsLayout = new javax.swing.GroupLayout(jEditGeneralProducts);
        jEditGeneralProducts.setLayout(jEditGeneralProductsLayout);
        jEditGeneralProductsLayout.setHorizontalGroup(
            jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                        .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jEditProductExpiryDateLabel)
                            .addComponent(jEditProductDateToOrderLabel)
                            .addComponent(jEditProductPriceLabel)
                            .addComponent(jEditProductWeightLabel)
                            .addComponent(jEditProductCategoryLabel)
                            .addComponent(jEditProduceNameLabel)
                            .addComponent(jEditProductMinimumStockLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                                .addComponent(jRemoveProductButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jEditProductButton))
                            .addComponent(jEditProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                        .addComponent(jProductIDEditLabel)
                        .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(jProductIDEditBlankLabel))
                            .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jEditProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(217, Short.MAX_VALUE))
        );
        jEditGeneralProductsLayout.setVerticalGroup(
            jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditGeneralProductsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProductIDEditLabel)
                    .addComponent(jEditProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProductIDEditBlankLabel)
                .addGap(7, 7, 7)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProduceNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductCategoryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductWeightLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductPriceLabel))
                .addGap(8, 8, 8)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductExpiryDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductDateToOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProductMinimumStockLabel))
                .addGap(18, 18, 18)
                .addGroup(jEditGeneralProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRemoveProductButton)
                    .addComponent(jEditProductButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jEditProductsTabbedPane.addTab("Edit General Products", jEditGeneralProducts);

        jFoodProductIDEditLabel.setText("Please enter the ID of the Food Product you wish to alter:");

        jEditProduceNameLabel1.setText("New Product Name:");

        jEditFoodProductWeightLabel.setText("New Product Weight:");

        jEditFoodProductPriceLabel.setText("New Product Price (£):");

        jEditFoodProductExpiryDateLabel.setText("New Product Expiry Date (dd/mm/yyyy:");

        jEditFoodProductDateToOrderLabel.setText("New Product Date to Order (dd/mm/yyyy):");

        jEditFoodProductButton.setText("Edit Product");
        jEditFoodProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditFoodProductButtonActionPerformed(evt);
            }
        });

        jRemoveFoodProductButton.setText("Remove Product");
        jRemoveFoodProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveFoodProductButtonActionPerformed(evt);
            }
        });

        jEditFoodProductMinimumStockLabel.setText("New Product Minimum Stock:");

        jEditFoodProductCategoryLabel.setText("New Product Category:");

        jFoodProductIDEditBlankLabel.setText("Leave Fields blank to retain original values (Weight Category must be specified)");

        jEditWeightCategoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grams", "Pounds", "Kilograms", "Litres", "Pints" }));

        jEditFoodProductWeightCategoryLabel.setText("New Product Weight Category:");

        jEditFoodProductUseByDateLabel.setText("New Product Use By Date (dd/mm/yyyy):");

        jEditFoodProductSoldByDateLabel.setText("New Product Sold By Date (dd/mm/yyyy):");

        javax.swing.GroupLayout jEditFoodProductsLayout = new javax.swing.GroupLayout(jEditFoodProducts);
        jEditFoodProducts.setLayout(jEditFoodProductsLayout);
        jEditFoodProductsLayout.setHorizontalGroup(
            jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditFoodProductsLayout.createSequentialGroup()
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jEditFoodProductsLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jEditFoodProductDateToOrderLabel)
                            .addComponent(jEditFoodProductExpiryDateLabel)
                            .addComponent(jEditFoodProductUseByDateLabel)
                            .addComponent(jEditFoodProductMinimumStockLabel)
                            .addComponent(jEditFoodProductPriceLabel)
                            .addComponent(jEditFoodProductWeightLabel)
                            .addComponent(jEditFoodProductWeightCategoryLabel)
                            .addComponent(jEditFoodProductCategoryLabel)
                            .addComponent(jEditProduceNameLabel1)
                            .addComponent(jEditFoodProductSoldByDateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jEditFoodProductsLayout.createSequentialGroup()
                                .addComponent(jRemoveFoodProductButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jEditFoodProductButton))
                            .addComponent(jEditFoodProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductUseByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductSoldByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditFoodProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditWeightCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jEditFoodProductsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jFoodProductIDEditLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEditFoodProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(230, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jEditFoodProductsLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jFoodProductIDEditBlankLabel)
                .addGap(175, 175, 175))
        );
        jEditFoodProductsLayout.setVerticalGroup(
            jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditFoodProductsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFoodProductIDEditLabel)
                    .addComponent(jEditFoodProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jFoodProductIDEditBlankLabel)
                .addGap(7, 7, 7)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditProduceNameLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductCategoryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditWeightCategoryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductWeightCategoryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductWeightLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductExpiryDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductDateToOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductUseByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductUseByDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductSoldByDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductSoldByDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditFoodProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditFoodProductMinimumStockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditFoodProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRemoveFoodProductButton)
                    .addComponent(jEditFoodProductButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jEditProductsTabbedPane.addTab("Edit Food Products", jEditFoodProducts);

        jElectronicProductIDEditLabel.setText("Please enter the ID of the Electronic Product you wish to alter:");

        jEditElectronicProduceNameLabel.setText("New Product Name:");

        jEditElectronicProductWeightLabel.setText("New Product Weight (kg):");

        jEditElectronicProductPriceLabel.setText("New Product Price (£):");

        jEditElectronicProductExpiryDateLabel.setText("New Product Expiry Date (dd/mm/yyyy:");

        jEditElectronicProductDateToOrderLabel.setText("New Product Date to Order (dd/mm/yyyy):");

        jEditElectronicProductButton.setText("Edit Product");
        jEditElectronicProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEditElectronicProductButtonActionPerformed(evt);
            }
        });

        jRemoveElectronicProductButton.setText("Remove Product");
        jRemoveElectronicProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRemoveElectronicProductButtonActionPerformed(evt);
            }
        });

        jEditElectronicProductMinimumStockLabel.setText("New Product Minimum Stock:");

        jEditElectronicProductCategoryLabel.setText("New Product Category:");

        jElectronicProductIDEditBlankLabel.setText("Leave Fields blank to retain original values");

        jEditEletronicProductGuaranteeLabel.setText("Guarantee Duration (days):");

        javax.swing.GroupLayout jEditElectronicProductsLayout = new javax.swing.GroupLayout(jEditElectronicProducts);
        jEditElectronicProducts.setLayout(jEditElectronicProductsLayout);
        jEditElectronicProductsLayout.setHorizontalGroup(
            jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditElectronicProductsLayout.createSequentialGroup()
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jEditElectronicProductsLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jElectronicProductIDEditLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEditElectronicProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jEditElectronicProductsLayout.createSequentialGroup()
                        .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jEditElectronicProductExpiryDateLabel)
                            .addComponent(jEditElectronicProductDateToOrderLabel)
                            .addComponent(jEditEletronicProductGuaranteeLabel)
                            .addComponent(jEditElectronicProductPriceLabel)
                            .addComponent(jEditElectronicProductWeightLabel)
                            .addComponent(jEditElectronicProductCategoryLabel)
                            .addComponent(jEditElectronicProduceNameLabel)
                            .addComponent(jEditElectronicProductMinimumStockLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jEditElectronicProductsLayout.createSequentialGroup()
                                .addComponent(jRemoveElectronicProductButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jEditElectronicProductButton))
                            .addComponent(jEditElectronicProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductGuaranteeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jEditElectronicProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(188, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jEditElectronicProductsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jElectronicProductIDEditBlankLabel)
                .addGap(275, 275, 275))
        );
        jEditElectronicProductsLayout.setVerticalGroup(
            jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jEditElectronicProductsLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jElectronicProductIDEditLabel)
                    .addComponent(jEditElectronicProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(jElectronicProductIDEditBlankLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProduceNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductCategoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductCategoryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductWeightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductWeightLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductGuaranteeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditEletronicProductGuaranteeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductExpiryDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductExpiryDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductDateToOrderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductDateToOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEditElectronicProductMinimumStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jEditElectronicProductMinimumStockLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jEditElectronicProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRemoveElectronicProductButton)
                    .addComponent(jEditElectronicProductButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jEditProductsTabbedPane.addTab("Edit Electronic Products", jEditElectronicProducts);

        javax.swing.GroupLayout jEditProductsLayout = new javax.swing.GroupLayout(jEditProducts);
        jEditProducts.setLayout(jEditProductsLayout);
        jEditProductsLayout.setHorizontalGroup(
            jEditProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 868, Short.MAX_VALUE)
            .addGroup(jEditProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jEditProductsTabbedPane))
        );
        jEditProductsLayout.setVerticalGroup(
            jEditProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
            .addGroup(jEditProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jEditProductsTabbedPane))
        );

        jTabbedPane.addTab("Edit Products", jEditProducts);

        jProductIDOrderLabel.setText("Product ID:");

        jOrderProductAmountLabel.setText("Amount to be ordered:");

        jOrderProductButton.setText("Place Order");
        jOrderProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOrderProductButtonActionPerformed(evt);
            }
        });

        jOrderCheckButton.setText("Check which Products need Re-Ordering");
        jOrderCheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOrderCheckButtonActionPerformed(evt);
            }
        });

        jDeliveryCompanyLabel.setText("Delivery Company:");

        jOrderTimeLabel.setText("NOTE: All Orders will take 5 days to arrive");

        jManufacturerStreetLabel.setText("Manufacturer Street:");

        jManufacturerHouseNoLabel.setText("Manufacturer House Number:");

        jManufacturerTownLabel.setText("Manufacturer Town:");

        jManufacturerAreaLabel.setText("Manufacturer Area:");

        jManufacturerPostcodeLabel.setText("Manufacturer Postcode:");

        jManufacturerCountryLabel.setText("Manufacturer Country:");

        jManufacturerAddressRequestLabel.setText("Please Enter Address Details for the Manufacturer");

        jProductIDOrderLabel1.setText("Type of Product");

        jOrderTypeOfProductComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "General", "Food", "Electronic" }));

        jOrderBankingSoftwareButton.setText("Open Banking Software");
        jOrderBankingSoftwareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOrderBankingSoftwareButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jOrderProductsLayout = new javax.swing.GroupLayout(jOrderProducts);
        jOrderProducts.setLayout(jOrderProductsLayout);
        jOrderProductsLayout.setHorizontalGroup(
            jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jOrderProductsLayout.createSequentialGroup()
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jOrderProductsLayout.createSequentialGroup()
                        .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jOrderProductsLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jOrderProductAmountLabel))
                            .addGroup(jOrderProductsLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jManufacturerHouseNoLabel)
                                                    .addComponent(jManufacturerTownLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                                .addComponent(jManufacturerAreaLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jManufacturerStreetLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                            .addComponent(jManufacturerPostcodeLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addComponent(jManufacturerCountryLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jDeliveryCompanyLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jManufacturerHouseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jManufacturerStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jManufacturerTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jManufacturerAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jManufacturerPostcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jManufacturerCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jOrderProductsLayout.createSequentialGroup()
                                .addComponent(jOrderCheckButton)
                                .addGap(26, 26, 26)
                                .addComponent(jOrderProductButton))
                            .addComponent(jAmountToBeOrderedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDeliveryCompanyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOrderBankingSoftwareButton)))
                    .addGroup(jOrderProductsLayout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jOrderTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jOrderProductsLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(jManufacturerAddressRequestLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jOrderProductsLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jProductIDOrderLabel1)
                            .addComponent(jProductIDOrderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jOrderProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jOrderTypeOfProductComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(371, Short.MAX_VALUE))
        );
        jOrderProductsLayout.setVerticalGroup(
            jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jOrderProductsLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jProductIDOrderLabel1)
                    .addComponent(jOrderTypeOfProductComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOrderProductIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jProductIDOrderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jManufacturerAddressRequestLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerStreetLabel)
                    .addComponent(jManufacturerStreetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerHouseNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jManufacturerHouseNoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerTownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jManufacturerTownLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerAreaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jManufacturerAreaLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerPostcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jManufacturerPostcodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jManufacturerCountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jManufacturerCountryLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDeliveryCompanyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDeliveryCompanyLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jAmountToBeOrderedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jOrderProductAmountLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOrderTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jOrderProductsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jOrderCheckButton)
                    .addComponent(jOrderProductButton))
                .addGap(31, 31, 31)
                .addComponent(jOrderBankingSoftwareButton)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Order Products", jOrderProducts);

        jOrderedProductsTextArea.setEditable(false);
        jOrderedProductsTextArea.setColumns(20);
        jOrderedProductsTextArea.setRows(5);
        jScrollPane2.setViewportView(jOrderedProductsTextArea);

        jShowOrdersButton.setText("Show Orders");
        jShowOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jShowOrdersButtonActionPerformed(evt);
            }
        });

        jClearOrderHistoryButton.setText("Clear Order History");
        jClearOrderHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jClearOrderHistoryButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jOrderHistoryLayout = new javax.swing.GroupLayout(jOrderHistory);
        jOrderHistory.setLayout(jOrderHistoryLayout);
        jOrderHistoryLayout.setHorizontalGroup(
            jOrderHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jOrderHistoryLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jOrderHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jOrderHistoryLayout.createSequentialGroup()
                        .addComponent(jShowOrdersButton)
                        .addGap(415, 415, 415)
                        .addComponent(jClearOrderHistoryButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jOrderHistoryLayout.setVerticalGroup(
            jOrderHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jOrderHistoryLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jOrderHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jShowOrdersButton)
                    .addComponent(jClearOrderHistoryButton))
                .addContainerGap(251, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Order History", jOrderHistory);

        jBasketTextArea.setEditable(false);
        jBasketTextArea.setColumns(20);
        jBasketTextArea.setRows(5);
        jScrollPane5.setViewportView(jBasketTextArea);

        jBasketLabel.setText("Basket");

        jBasketProductIDLabel.setText("Product ID:");

        jBasketModifyAmountButton.setText("Update");
        jBasketModifyAmountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBasketModifyAmountButtonActionPerformed(evt);
            }
        });

        jBasketProductQuantityLabel.setText("Quantity:");

        jBasketRemoveButton.setText("Remove");
        jBasketRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBasketRemoveButtonActionPerformed(evt);
            }
        });

        jDisplayBasketButton.setText("Display");
        jDisplayBasketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayBasketButtonActionPerformed(evt);
            }
        });

        jWishlistTextArea.setEditable(false);
        jWishlistTextArea.setColumns(20);
        jWishlistTextArea.setRows(5);
        jScrollPane6.setViewportView(jWishlistTextArea);

        jWishlistLabel.setText("Wishlist");

        jDisplayWishlistButton.setText("Display");
        jDisplayWishlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDisplayWishlistButtonActionPerformed(evt);
            }
        });

        jWishlistProductIDLabel.setText("Product ID:");

        jWishlistModifyAmountButton.setText("Update");
        jWishlistModifyAmountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWishlistModifyAmountButtonActionPerformed(evt);
            }
        });

        jWishlistProductQuantityLabel.setText("Quantity:");

        jWishlistRemoveButton.setText("Remove");
        jWishlistRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWishlistRemoveButtonActionPerformed(evt);
            }
        });

        jWishlistTransferButton.setText("Transfer to Basket");
        jWishlistTransferButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jWishlistTransferButtonActionPerformed(evt);
            }
        });

        jCheckoutButton.setText("Checkout");
        jCheckoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jBasketLayout = new javax.swing.GroupLayout(jBasket);
        jBasket.setLayout(jBasketLayout);
        jBasketLayout.setHorizontalGroup(
            jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBasketLayout.createSequentialGroup()
                .addGap(183, 183, 183)
                .addComponent(jDisplayBasketButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jDisplayWishlistButton)
                .addGap(170, 170, 170))
            .addGroup(jBasketLayout.createSequentialGroup()
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jBasketLayout.createSequentialGroup()
                        .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jBasketRemoveButton)
                            .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jBasketLayout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBasketProductQuantityLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBasketQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jBasketModifyAmountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jBasketLayout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jBasketLayout.createSequentialGroup()
                                            .addComponent(jBasketProductIDLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jBasketIDTextField))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jBasketLayout.createSequentialGroup()
                                .addComponent(jWishlistProductIDLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jWishlistIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jBasketLayout.createSequentialGroup()
                        .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jBasketLayout.createSequentialGroup()
                                .addGap(242, 242, 242)
                                .addComponent(jWishlistProductQuantityLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jWishlistQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jBasketLayout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(jCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jWishlistRemoveButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jWishlistTransferButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jWishlistModifyAmountButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(39, 39, 39))
            .addGroup(jBasketLayout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jBasketLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jWishlistLabel)
                .addGap(188, 188, 188))
        );
        jBasketLayout.setVerticalGroup(
            jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jBasketLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBasketLabel)
                    .addComponent(jWishlistLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDisplayBasketButton)
                    .addComponent(jDisplayWishlistButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBasketIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBasketProductIDLabel)
                    .addComponent(jWishlistIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWishlistProductIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBasketModifyAmountButton)
                    .addComponent(jBasketQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBasketProductQuantityLabel)
                    .addComponent(jWishlistModifyAmountButton)
                    .addComponent(jWishlistQuantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWishlistProductQuantityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBasketRemoveButton)
                    .addComponent(jWishlistTransferButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jBasketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jWishlistRemoveButton))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Basket and Wishlist", jBasket);

        jPurchaseHistoryLabel.setText("Purchase History");

        jPurchaseHistoryTextArea.setEditable(false);
        jPurchaseHistoryTextArea.setColumns(20);
        jPurchaseHistoryTextArea.setRows(5);
        jScrollPane7.setViewportView(jPurchaseHistoryTextArea);

        jAccountDetailsLabel.setText("Account Details");

        jAccountDetailsFirstNameLabel.setText("First Name:");

        jAccountDetailsLastNameLabel.setText("Last Name:");

        jAccountDetailsAddressLabel.setText("Address:");

        jAccountDetailsCityLabel.setText("City:");

        jAccountDetailsPostcodeLabel.setText("Postcode:");

        jAccountDetailsCountryLabel.setText("Country:");

        jAccountDetailsPhoneNumberLabel.setText("Phone Number:");

        jAccountDetailsAccountNumberLabel.setText("Account Number:");

        javax.swing.GroupLayout jAccountLayout = new javax.swing.GroupLayout(jAccount);
        jAccount.setLayout(jAccountLayout);
        jAccountLayout.setHorizontalGroup(
            jAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAccountLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jAccountDetailsFirstNameLabel)
                    .addComponent(jAccountDetailsLastNameLabel)
                    .addComponent(jAccountDetailsAddressLabel)
                    .addComponent(jAccountDetailsCityLabel)
                    .addComponent(jAccountDetailsPostcodeLabel)
                    .addComponent(jAccountDetailsCountryLabel)
                    .addComponent(jAccountDetailsPhoneNumberLabel)
                    .addComponent(jAccountDetailsAccountNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jAccountLayout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addComponent(jAccountDetailsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPurchaseHistoryLabel)
                .addGap(183, 183, 183))
        );
        jAccountLayout.setVerticalGroup(
            jAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jAccountLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(jAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPurchaseHistoryLabel)
                    .addComponent(jAccountDetailsLabel))
                .addGroup(jAccountLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jAccountLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jAccountLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jAccountDetailsAccountNumberLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsFirstNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsLastNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsCityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsPostcodeLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsCountryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jAccountDetailsPhoneNumberLabel)))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Account", jAccount);

        jFirstNameLabel.setText("First Name");

        jLastNameLabel.setText("Last Name");

        jCityLabel.setText("City");

        jPostCodeTextField.setText("Postcode");

        jAddressLabel.setText("Address");

        jCountryLabel.setText("Country");

        jPhoneNumberLabel.setText("Phone Number");

        jTransactionButton.setText("Complete Transaction");
        jTransactionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTransactionButtonActionPerformed(evt);
            }
        });

        jTotalPriceLabel.setText("Total Price (£): ");

        jUniqueProductsLabel.setText("Unique Products: ");

        jTotalQuantityLabel.setText("Total Quantity: ");

        jCountryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "United Kingdom", "Afghanistan", "Albania", "Algeria", "Andorra", "Angola", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Australia", "Austria", "Azerbaijan", "Bahamas, The", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Central African Republic", "Chad", "Chile", "China", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Curacao", "Cyprus", "Czech Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "East Timor", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Fiji", "Finland", "France", "Gabon", "Gambia, The", "Georgia", "Germany", "Ghana", "Greece", "Grenada", "Guatemala", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Holy See", "Honduras", "Hong Kong", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Israel", "Italy", "Jamaica", "Japan", "Jordan", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kosovo", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Marshall Islands", "Mauritania", "Mauritius", "Mexico", "Micronesia", "Moldova", "Monaco", "Mongolia", "Montenegro", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Zealand", "Nicaragua", "Niger", "Nigeria", "North Korea", "Norway", "Oman", "Pakistan", "Palau", "Palestinian Territories", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Poland", "Portugal", "Qatar", "Romania", "Russia", "Rwanda", "Saint Kitts and Nevis", "Saint Lucia", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Senegal", "Serbia", "Seychelles", "Sierra Leone", "Singapore", "Sint Maarten", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Korea", "South Sudan", "Spain", "Sri Lanka", "Sudan", "Suriname", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Timor-Leste", "Togo", "Tonga", "Trinidad and Tobago", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United States", "Uruguay", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Yemen", "Zambia", "Zimbabwe", " " }));

        jPurchaseDateLabel.setText("Purchase Date:");

        jAccountNumberLabel.setText("Account Number");

        jOpenBankingSoftwareButton.setText("Open Banking Software");
        jOpenBankingSoftwareButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenBankingSoftwareButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jCheckoutLayout = new javax.swing.GroupLayout(jCheckout);
        jCheckout.setLayout(jCheckoutLayout);
        jCheckoutLayout.setHorizontalGroup(
            jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCheckoutLayout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addComponent(jTransactionButton)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jCheckoutLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jCheckoutLayout.createSequentialGroup()
                        .addComponent(jTotalPriceLabel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jCheckoutLayout.createSequentialGroup()
                        .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jCheckoutLayout.createSequentialGroup()
                                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jAddressTextField)
                                    .addGroup(jCheckoutLayout.createSequentialGroup()
                                        .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jCheckoutLayout.createSequentialGroup()
                                                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jCheckoutLayout.createSequentialGroup()
                                                        .addComponent(jFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jCheckoutLayout.createSequentialGroup()
                                                        .addComponent(jFirstNameLabel)
                                                        .addGap(57, 57, 57)))
                                                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLastNameLabel)
                                                    .addComponent(jLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addComponent(jAddressLabel))
                                        .addGap(0, 139, Short.MAX_VALUE)))
                                .addGap(28, 28, 28))
                            .addGroup(jCheckoutLayout.createSequentialGroup()
                                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCountryLabel)
                                    .addComponent(jCountryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPhoneNumberLabel)
                            .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jCityLabel)
                                .addComponent(jPostcodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                .addComponent(jCityTextField)
                                .addComponent(jPostCodeTextField)
                                .addComponent(jPhoneNumberTextField)))
                        .addContainerGap(156, Short.MAX_VALUE))
                    .addGroup(jCheckoutLayout.createSequentialGroup()
                        .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jOpenBankingSoftwareButton)
                            .addComponent(jAccountNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jAccountNumberLabel)
                            .addComponent(jPurchaseDateLabel)
                            .addComponent(jTotalQuantityLabel)
                            .addComponent(jUniqueProductsLabel))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jCheckoutLayout.setVerticalGroup(
            jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jCheckoutLayout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(jOpenBankingSoftwareButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jAccountNumberLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jAccountNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFirstNameLabel)
                    .addComponent(jLastNameLabel)
                    .addComponent(jCityLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPostCodeTextField)
                    .addComponent(jAddressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPostcodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCountryLabel)
                    .addComponent(jPhoneNumberLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jCheckoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPhoneNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCountryComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPurchaseDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTotalQuantityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jUniqueProductsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTotalPriceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTransactionButton)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        jTabbedPane.addTab("Checkout", jCheckout);

        javax.swing.GroupLayout jMainPanelLayout = new javax.swing.GroupLayout(jMainPanel);
        jMainPanel.setLayout(jMainPanelLayout);
        jMainPanelLayout.setHorizontalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jMainPanelLayout.setVerticalGroup(
            jMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRemoveProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveProductButtonActionPerformed
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        String strEditProductID = jEditProductIDTextField.getText();
        SupermarketProducts.RemoveByID(strEditProductID, "Product");
        SupermarketProducts.PrintProductFile("Product");
    }//GEN-LAST:event_jRemoveProductButtonActionPerformed

    private void jEditProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditProductButtonActionPerformed
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        String strEditProductID = jEditProductIDTextField.getText();
        String strEditProductName;
        String strEditProductCategory;
        double dblEditProductWeight;
        double dblEditProductPrice;
        Date dateEditProductExpiryDate;
        Date dateEditProductDateToOrder;
        int intEditProductMinimumStock;
        if (jEditProductNameTextField.getText().isEmpty()) {
            strEditProductName = SupermarketProducts.getProductInfoByID(strEditProductID).getName();
        } else {
            strEditProductName = jEditProductNameTextField.getText();
        }
        if (jEditProductCategoryTextField.getText().isEmpty()) {
            strEditProductCategory = SupermarketProducts.getProductInfoByID(strEditProductID).getCategory();
        } else {
            strEditProductCategory = jEditProductCategoryTextField.getText();
        }
        if (jEditProductWeightTextField.getText().isEmpty()) {
            dblEditProductWeight = SupermarketProducts.getProductInfoByID(strEditProductID).getWeight();
        } else {
            dblEditProductWeight = Double.valueOf(jEditProductWeightTextField.getText());
        }
        if (jEditProductPriceTextField.getText().isEmpty()) {
            dblEditProductPrice = SupermarketProducts.getProductInfoByID(strEditProductID).getPrice();
        } else {
            dblEditProductPrice = Double.valueOf(jEditProductPriceTextField.getText());
        }
        dateEditProductExpiryDate = new Date();
        dateEditProductDateToOrder = new Date();
        if (jEditProductExpiryDateTextField.getText().isEmpty()) {
            dateEditProductExpiryDate = SupermarketProducts.getProductInfoByID(strEditProductID).getExpiryDate();
        } else {
            try {
                dateEditProductExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jEditProductExpiryDateTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditProductDateToOrderTextField.getText().isEmpty()) {
            dateEditProductDateToOrder = SupermarketProducts.getProductInfoByID(strEditProductID).getDateToOrder();
        } else {
            try {
                dateEditProductDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jEditProductDateToOrderTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditProductMinimumStockTextField.getText().isEmpty()) {
            intEditProductMinimumStock = SupermarketProducts.getProductInfoByID(strEditProductID).getMinimumStock();
        } else {
            intEditProductMinimumStock = Integer.valueOf(jEditProductMinimumStockTextField.getText());
        }
        SupermarketProducts.EditByID(strEditProductID, strEditProductName, strEditProductCategory, dblEditProductWeight, dblEditProductPrice, dateEditProductExpiryDate, dateEditProductDateToOrder, intEditProductMinimumStock);
        SupermarketProducts.PrintProductFile("Product");
    }//GEN-LAST:event_jEditProductButtonActionPerformed

    private void jAssociatedImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAssociatedImageButtonActionPerformed
        String strProductID = jProductImageIDTextField.getText();
        ImageIcon productImage = new ImageIcon(getClass().getResource("/assignment/pkg1/images/" + SupermarketProducts.getProductInfoByID(strProductID).getImageIdentifier()));
        jProductAssociatedImageLabel.setIcon(productImage);
    }//GEN-LAST:event_jAssociatedImageButtonActionPerformed

    private void jClearProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearProductsButtonActionPerformed
        jProductListTextArea.setText("");
        SupermarketProducts.clear("Product");
        SupermarketProducts.ClearProductFile("Product");
        JOptionPane.showMessageDialog(null, "Product List Cleared");
    }//GEN-LAST:event_jClearProductsButtonActionPerformed

    private void jShowProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowProductsButtonActionPerformed
        jProductListTextArea.setText("");
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        SupermarketProducts.Display(jProductListTextArea, "Product");
    }//GEN-LAST:event_jShowProductsButtonActionPerformed

    private void jFoodImageForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFoodImageForwardButtonActionPerformed
        ImageIcon[] foodimagelist = new ImageIcon[5];
        for (int i = 0; i < foodimagelist.length; i++) {
            foodimagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/foodimages/" + foodImageNames[i]));
        }
        if (foodCount < 4 && foodCount < foodImageNames.length) {
            foodCount++;
            jFoodImageLabel.setIcon(foodimagelist[foodCount]);
        }
    }//GEN-LAST:event_jFoodImageForwardButtonActionPerformed

    private void jFoodImageBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFoodImageBackButtonActionPerformed
        ImageIcon[] foodimagelist = new ImageIcon[5];
        for (int i = 0; i < foodimagelist.length; i++) {
            foodimagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/foodimages/" + foodImageNames[i]));
        }
        if (foodCount > 0 && foodCount <= foodImageNames.length) {
            foodCount--;
            jFoodImageLabel.setIcon(foodimagelist[foodCount]);
        }
    }//GEN-LAST:event_jFoodImageBackButtonActionPerformed

    private void jAddFoodProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddFoodProductButtonActionPerformed
        if (jFoodNameTextField.getText().isEmpty() || jFoodCategoryTextField.getText().isEmpty() || jFoodManufacturerName.getText().isEmpty() || jFoodWeightTextField.getText().isEmpty() || jFoodPriceTextField.getText().isEmpty() || jFoodExpiryDateTextField.getText().isEmpty() || jFoodDateToOrderTextField.getText().isEmpty() || jFoodUseByDateTextField.getText().isEmpty() || jFoodSoldByDateTextField.getText().isEmpty() || jFoodMinimumStockTextField.getText().isEmpty() || jFoodMaximumStockTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all Text Fields");
        } else {
            try {
                SupermarketProducts.clear("Food");
                SupermarketProducts.ReadProductFile("Food");
                TempFoodProduct = new FoodProduct();
                String productName = jFoodNameTextField.getText();
                String productCategory = jFoodCategoryTextField.getText();
                String productManufacturerName = jFoodManufacturerName.getText();
                String productWeightCategory = jWeightCategoryComboBox.getSelectedItem().toString();
                double productWeight = Double.valueOf(jFoodWeightTextField.getText());
                double productPrice = Double.valueOf(jFoodPriceTextField.getText());
                Date productExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jFoodExpiryDateTextField.getText());
                Date productDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jFoodDateToOrderTextField.getText());
                Date productUseByDate = new SimpleDateFormat("dd-MM-yyyy").parse(jFoodUseByDateTextField.getText());
                Date productSoldByDate = new SimpleDateFormat("dd-MM-yyyy").parse(jFoodSoldByDateTextField.getText());
                int productMinimumStock = Integer.valueOf(jFoodMinimumStockTextField.getText());
                int productMaximumStock = Integer.valueOf(jFoodMaximumStockTextField.getText());
                String productImageIdentifier = String.valueOf(foodImageNames[foodCount]);
                TempFoodProduct.Edit(productName, productCategory, productManufacturerName, productWeightCategory, productWeight, productPrice, productExpiryDate, productDateToOrder, productUseByDate, productSoldByDate, productMinimumStock, productMaximumStock, productImageIdentifier);
                SupermarketProducts.addFoodProduct(TempFoodProduct);
                SupermarketProducts.PrintProductFile("Food");
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jAddFoodProductButtonActionPerformed

    private void jImageForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImageForwardButtonActionPerformed
        ImageIcon[] imagelist = new ImageIcon[5];
        for (int i = 0; i < imagelist.length; i++) {
            imagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/images/" + imageNames[i]));
        }
        if (count < 4 && count < imageNames.length) {
            count++;
            jImageLabel.setIcon(imagelist[count]);
        }
    }//GEN-LAST:event_jImageForwardButtonActionPerformed

    private void jImageBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jImageBackButtonActionPerformed
        ImageIcon[] imagelist = new ImageIcon[5];
        for (int i = 0; i < imagelist.length; i++) {
            imagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/images/" + imageNames[i]));
        }
        if (count > 0 && count <= imageNames.length) {
            count--;
            jImageLabel.setIcon(imagelist[count]);
        }
    }//GEN-LAST:event_jImageBackButtonActionPerformed

    private void jAddProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddProductButtonActionPerformed
        if (jProductNameTextField.getText().isEmpty() || jProductCategoryTextField.getText().isEmpty() || jProductManufacturerName.getText().isEmpty() || jWeightTextField.getText().isEmpty() || jPriceTextField.getText().isEmpty() || jExpiryDateTextField.getText().isEmpty() || jDateToOrderTextField.getText().isEmpty() || jMinimumStockTextField.getText().isEmpty() || jMaximumStockTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all Text Fields");
        } else {
            try {
                SupermarketProducts.clear("Product");
                SupermarketProducts.ReadProductFile("Product");
                TempProduct = new Product();
                String productName = jProductNameTextField.getText();
                String productCategory = jProductCategoryTextField.getText();
                String productManufacturerName = jProductManufacturerName.getText();
                double productWeight = Double.valueOf(jWeightTextField.getText());
                double productPrice = Double.valueOf(jPriceTextField.getText());
                Date productExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jExpiryDateTextField.getText());
                Date productDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jDateToOrderTextField.getText());
                int productMinimumStock = Integer.valueOf(jMinimumStockTextField.getText());
                int productMaximumStock = Integer.valueOf(jMaximumStockTextField.getText());
                String productImageIdentifier = String.valueOf(imageNames[count]);
                TempProduct.Edit(productName, productCategory, productManufacturerName, productWeight, productPrice, productExpiryDate, productDateToOrder, productMinimumStock, productMaximumStock, productImageIdentifier);
                SupermarketProducts.add(TempProduct);
                SupermarketProducts.PrintProductFile("Product");
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jAddProductButtonActionPerformed

    private void jLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLoginButtonActionPerformed
        SupermarketProducts.ClearProductFile("Basket");
        if (theEmployee.isUser(jUserNameTextField.getText(), jPasswordField.getText()) && theEmployee.isEmployee(jUserNameTextField.getText())) {
            strUserName = (jUserNameTextField.getText()).split(":")[0];
            JOptionPane.showMessageDialog(null, "Successfully logged in as " + strUserName + " with Employee rights");
            strUserRights = "Employee";
            jTabbedPane.addTab("Show Products", jTabInMemory2);
            jTabbedPane.addTab("Order History", jTabInMemory5);
            jTabbedPane.setSelectedIndex(1);
            jClearProductsButton.setEnabled(false);
            jClearFoodProductsButton.setEnabled(false);
            jClearElectronicProductsButton.setEnabled(false);
            jClearOrderHistoryButton.setEnabled(false);
            jPurchaseProductButton.setEnabled(false);
            jPurchaseFoodProductButton.setEnabled(false);
            jPurchaseElectronicProductButton.setEnabled(false);
        } else if (theEmployee.isUser(jUserNameTextField.getText(), jPasswordField.getText()) && theEmployee.isAdministrator(jUserNameTextField.getText())) {
            strUserName = (jUserNameTextField.getText()).split(":")[0];
            JOptionPane.showMessageDialog(null, "Successfully logged in as " + strUserName + " with Administrator rights");
            strUserRights = "Administrator";
            jTabbedPane.addTab("Product Input", jTabInMemory);
            jTabbedPane.addTab("Show Products", jTabInMemory2);
            jTabbedPane.addTab("Edit Products", jTabInMemory3);
            jTabbedPane.addTab("Order Products", jTabInMemory4);
            jTabbedPane.addTab("Order History", jTabInMemory5);
            jTabbedPane.addTab("Basket and Wishlist", jTabInMemory6);
            jTabbedPane.addTab("Account", jTabInMemory7);
            jTabbedPane.addTab("Checkout", jTabInMemory8);
            jClearProductsButton.setEnabled(true);
            jClearFoodProductsButton.setEnabled(true);
            jClearElectronicProductsButton.setEnabled(true);
            jClearOrderHistoryButton.setEnabled(true);
            jPurchaseProductButton.setEnabled(true);
            jPurchaseFoodProductButton.setEnabled(true);
            jPurchaseElectronicProductButton.setEnabled(true);
            jTabbedPane.setEnabledAt(8, false);
            jTabbedPane.setSelectedIndex(1);
        } else if (theEmployee.isUser(jUserNameTextField.getText(), jPasswordField.getText()) && theEmployee.isCustomer(jUserNameTextField.getText())) {
            strUserName = (jUserNameTextField.getText()).split(":")[0];
            JOptionPane.showMessageDialog(null, "Successfully logged in as " + strUserName + " with Customer rights");
            strUserRights = "Customer";
            jClearProductsButton.setEnabled(false);
            jClearFoodProductsButton.setEnabled(false);
            jClearElectronicProductsButton.setEnabled(false);
            jTabbedPane.addTab("Show Products", jTabInMemory2);
            jTabbedPane.addTab("Basket and Wishlist", jTabInMemory6);
            jTabbedPane.addTab("Account", jTabInMemory7);
            jTabbedPane.addTab("Checkout", jTabInMemory8);
            jTabbedPane.setEnabledAt(4, false);
            jTabbedPane.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(null, "Please register before attempting login");
        }
    }//GEN-LAST:event_jLoginButtonActionPerformed

    private void jRegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRegisterButtonActionPerformed
        if (jUserNameTextField.getText().substring(jUserNameTextField.getText().lastIndexOf(":") + 1).matches("Employee")) {
            theEmployee.isRegistered(jUserNameTextField.getText(), jPasswordField.getText());
            JOptionPane.showMessageDialog(null, jUserNameTextField.getText() + " is registered with Employee rights" + "\n" + "Please login now");
        } else if (jUserNameTextField.getText().substring(jUserNameTextField.getText().lastIndexOf(":") + 1).matches("Administrator")) {
            theEmployee.isRegistered(jUserNameTextField.getText(), jPasswordField.getText());
            JOptionPane.showMessageDialog(null, jUserNameTextField.getText() + " is registered with Administrator rights" + "\n" + "Please login now");
        } else if (jUserNameTextField.getText().substring(jUserNameTextField.getText().lastIndexOf(":") + 1).matches("Customer")) {
            theEmployee.isRegistered(jUserNameTextField.getText(), jPasswordField.getText());
            JOptionPane.showMessageDialog(null, jUserNameTextField.getText() + " is registered with Customer rights" + "\n" + "Please login now");
        } else {
            JOptionPane.showMessageDialog(null, "Please register as either an Employee, Customer or Administrator" + "\n" + "Details on how to do so are listed below");
        }
    }//GEN-LAST:event_jRegisterButtonActionPerformed

    private void jShowFoodProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowFoodProductsButtonActionPerformed
        jFoodProductListTextArea.setText("");
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        SupermarketProducts.Display(jFoodProductListTextArea, "Food");
    }//GEN-LAST:event_jShowFoodProductsButtonActionPerformed

    private void jClearFoodProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearFoodProductsButtonActionPerformed
        jFoodProductListTextArea.setText("");
        SupermarketProducts.clear("Food");
        SupermarketProducts.ClearProductFile("Food");
        JOptionPane.showMessageDialog(null, "Food Product List Cleared");
    }//GEN-LAST:event_jClearFoodProductsButtonActionPerformed

    private void jAssociatedFoodImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAssociatedFoodImageButtonActionPerformed
        String strProductID = jFoodProductImageIDTextField.getText();
        ImageIcon foodProductImage = new ImageIcon(getClass().getResource("/assignment/pkg1/foodimages/" + SupermarketProducts.getFoodProductInfoByID(strProductID).getImageIdentifier()));
        jFoodProductAssociatedImageLabel.setIcon(foodProductImage);
    }//GEN-LAST:event_jAssociatedFoodImageButtonActionPerformed

    private void jAddElectronicProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddElectronicProductButtonActionPerformed
        if (jElectronicNameTextField.getText().isEmpty() || jElectronicCategoryTextField.getText().isEmpty() || jElectronicManufacturerName.getText().isEmpty() || jElectronicWeightTextField.getText().isEmpty() || jElectronicPriceTextField.getText().isEmpty() || jElectronicGuaranteeTextField.getText().isEmpty() || jElectronicExpiryDateTextField.getText().isEmpty() || jElectronicDateToOrderTextField.getText().isEmpty() || jElectronicMinimumStockTextField.getText().isEmpty() || jElectronicMaximumStockTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all Text Fields");
        } else {
            try {
                SupermarketProducts.clear("Electronic");
                SupermarketProducts.ReadProductFile("Electronic");
                TempElectronicProduct = new ElectronicProduct();
                String productName = jElectronicNameTextField.getText();
                String productCategory = jElectronicCategoryTextField.getText();
                String productManufacturerName = jElectronicManufacturerName.getText();
                double productWeight = Double.valueOf(jElectronicWeightTextField.getText());
                double productPrice = Double.valueOf(jElectronicPriceTextField.getText());
                int productGuaranteeDuration = Integer.valueOf(jElectronicGuaranteeTextField.getText());
                Date productExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jElectronicExpiryDateTextField.getText());
                Date productDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jElectronicDateToOrderTextField.getText());
                int productMinimumStock = Integer.valueOf(jElectronicMinimumStockTextField.getText());
                int productMaximumStock = Integer.valueOf(jElectronicMaximumStockTextField.getText());
                String productImageIdentifier = String.valueOf(electronicImageNames[electronicCount]);
                TempElectronicProduct.Edit(productName, productCategory, productManufacturerName, productWeight, productPrice, productGuaranteeDuration, productExpiryDate, productDateToOrder, productMinimumStock, productMaximumStock, productImageIdentifier);
                SupermarketProducts.addElectronicProduct(TempElectronicProduct);
                SupermarketProducts.PrintProductFile("Electronic");
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jAddElectronicProductButtonActionPerformed

    private void jElectronicImageBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jElectronicImageBackButtonActionPerformed
        ImageIcon[] electronicimagelist = new ImageIcon[5];
        for (int i = 0; i < electronicimagelist.length; i++) {
            electronicimagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/electronicimages/" + electronicImageNames[i]));
        }
        if (electronicCount > 0 && electronicCount <= electronicImageNames.length) {
            electronicCount--;
            jElectronicImageLabel.setIcon(electronicimagelist[electronicCount]);
        }
    }//GEN-LAST:event_jElectronicImageBackButtonActionPerformed

    private void jElectronicImageForwardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jElectronicImageForwardButtonActionPerformed
        ImageIcon[] electronicimagelist = new ImageIcon[5];
        for (int i = 0; i < electronicimagelist.length; i++) {
            electronicimagelist[i] = new ImageIcon(getClass().getResource("/assignment/pkg1/electronicimages/" + electronicImageNames[i]));
        }
        if (electronicCount < 4 && electronicCount < electronicImageNames.length) {
            electronicCount++;
            jElectronicImageLabel.setIcon(electronicimagelist[electronicCount]);
        }
    }//GEN-LAST:event_jElectronicImageForwardButtonActionPerformed

    private void jShowElectronicProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowElectronicProductsButtonActionPerformed
        jElectronicProductListTextArea.setText("");
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        SupermarketProducts.Display(jElectronicProductListTextArea, "Electronic");
    }//GEN-LAST:event_jShowElectronicProductsButtonActionPerformed

    private void jClearElectronicProductsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearElectronicProductsButtonActionPerformed
        jElectronicProductListTextArea.setText("");
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ClearProductFile("Electronic");
        JOptionPane.showMessageDialog(null, "Electronic Product List Cleared");
    }//GEN-LAST:event_jClearElectronicProductsButtonActionPerformed

    private void jAssociatedElectronicImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAssociatedElectronicImageButtonActionPerformed
        String strProductID = jElectronicProductImageIDTextField.getText();
        ImageIcon electronicProductImage = new ImageIcon(getClass().getResource("/assignment/pkg1/electronicimages/" + SupermarketProducts.getElectronicProductInfoByID(strProductID).getImageIdentifier()));
        jElectronicProductAssociatedImageLabel.setIcon(electronicProductImage);
    }//GEN-LAST:event_jAssociatedElectronicImageButtonActionPerformed

    private void jEditFoodProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditFoodProductButtonActionPerformed
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        String strEditProductID = jEditFoodProductIDTextField.getText();
        String strEditProductName;
        String strEditProductCategory;
        String strEditProductWeightCategory;
        double dblEditProductWeight;
        double dblEditProductPrice;
        Date dateEditProductExpiryDate;
        Date dateEditProductDateToOrder;
        Date dateEditProductUseByDate;
        Date dateEditProductSoldByDate;
        int intEditProductMinimumStock;
        if (jEditFoodProductNameTextField.getText().isEmpty()) {
            strEditProductName = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getName();
        } else {
            strEditProductName = jEditFoodProductNameTextField.getText();
        }
        if (jEditFoodProductCategoryTextField.getText().isEmpty()) {
            strEditProductCategory = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getCategory();
        } else {
            strEditProductCategory = jEditFoodProductCategoryTextField.getText();
        }
        strEditProductWeightCategory = jEditWeightCategoryComboBox.getSelectedItem().toString();
        if (jEditFoodProductWeightTextField.getText().isEmpty()) {
            dblEditProductWeight = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getWeight();
        } else {
            dblEditProductWeight = Double.valueOf(jEditFoodProductWeightTextField.getText());
        }
        if (jEditFoodProductPriceTextField.getText().isEmpty()) {
            dblEditProductPrice = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getPrice();
        } else {
            dblEditProductPrice = Double.valueOf(jEditFoodProductPriceTextField.getText());
        }
        dateEditProductExpiryDate = new Date();
        dateEditProductDateToOrder = new Date();
        dateEditProductUseByDate = new Date();
        dateEditProductSoldByDate = new Date();
        if (jEditProductExpiryDateTextField.getText().isEmpty()) {
            dateEditProductExpiryDate = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getExpiryDate();
        } else {
            try {
                dateEditProductExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jEditFoodProductExpiryDateTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditFoodProductDateToOrderTextField.getText().isEmpty()) {
            dateEditProductDateToOrder = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getDateToOrder();
        } else {
            try {
                dateEditProductDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jEditFoodProductDateToOrderTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditFoodProductUseByDateTextField.getText().isEmpty()) {
            dateEditProductUseByDate = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getUseByDate();
        } else {
            try {
                dateEditProductUseByDate = new SimpleDateFormat("dd-MM-yyyy").parse(jEditFoodProductUseByDateTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditFoodProductSoldByDateTextField.getText().isEmpty()) {
            dateEditProductSoldByDate = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getSoldByDate();
        } else {
            try {
                dateEditProductSoldByDate = new SimpleDateFormat("dd-MM-yyyy").parse(jEditFoodProductSoldByDateTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditFoodProductMinimumStockTextField.getText().isEmpty()) {
            intEditProductMinimumStock = SupermarketProducts.getFoodProductInfoByID(strEditProductID).getMinimumStock();
        } else {
            intEditProductMinimumStock = Integer.valueOf(jEditFoodProductMinimumStockTextField.getText());
        }
        SupermarketProducts.EditByID(strEditProductID, strEditProductName, strEditProductCategory, strEditProductWeightCategory, dblEditProductWeight, dblEditProductPrice, dateEditProductExpiryDate, dateEditProductDateToOrder, dateEditProductUseByDate, dateEditProductSoldByDate, intEditProductMinimumStock);
        SupermarketProducts.PrintProductFile("Food");
    }//GEN-LAST:event_jEditFoodProductButtonActionPerformed

    private void jRemoveFoodProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveFoodProductButtonActionPerformed
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        String strEditProductID = jEditFoodProductIDTextField.getText();
        SupermarketProducts.RemoveByID(strEditProductID, "Food");
        SupermarketProducts.PrintProductFile("Food");
    }//GEN-LAST:event_jRemoveFoodProductButtonActionPerformed

    private void jEditElectronicProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEditElectronicProductButtonActionPerformed
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        String strEditProductID = jEditElectronicProductIDTextField.getText();
        String strEditProductName;
        String strEditProductCategory;
        double dblEditProductWeight;
        double dblEditProductPrice;
        int intEditProductGuaranteeDuration;
        Date dateEditProductExpiryDate;
        Date dateEditProductDateToOrder;
        int intEditProductMinimumStock;
        if (jEditElectronicProductNameTextField.getText().isEmpty()) {
            strEditProductName = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getName();
        } else {
            strEditProductName = jEditElectronicProductNameTextField.getText();
        }
        if (jEditElectronicProductCategoryTextField.getText().isEmpty()) {
            strEditProductCategory = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getCategory();
        } else {
            strEditProductCategory = jEditElectronicProductCategoryTextField.getText();
        }
        if (jEditElectronicProductWeightTextField.getText().isEmpty()) {
            dblEditProductWeight = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getWeight();
        } else {
            dblEditProductWeight = Double.valueOf(jEditElectronicProductWeightTextField.getText());
        }
        if (jEditElectronicProductPriceTextField.getText().isEmpty()) {
            dblEditProductPrice = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getPrice();
        } else {
            dblEditProductPrice = Double.valueOf(jEditElectronicProductPriceTextField.getText());
        }
        if (jEditElectronicProductGuaranteeTextField.getText().isEmpty()) {
            intEditProductGuaranteeDuration = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getGuaranteeDuration();
        } else {
            intEditProductGuaranteeDuration = Integer.valueOf(jEditElectronicProductGuaranteeTextField.getText());
        }
        dateEditProductExpiryDate = new Date();
        dateEditProductDateToOrder = new Date();
        if (jEditProductExpiryDateTextField.getText().isEmpty()) {
            dateEditProductExpiryDate = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getExpiryDate();
        } else {
            try {
                dateEditProductExpiryDate = new SimpleDateFormat("dd-MM-yyyy").parse(jEditElectronicProductExpiryDateTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditElectronicProductDateToOrderTextField.getText().isEmpty()) {
            dateEditProductDateToOrder = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getDateToOrder();
        } else {
            try {
                dateEditProductDateToOrder = new SimpleDateFormat("dd-MM-yyyy").parse(jEditElectronicProductDateToOrderTextField.getText());
            } catch (ParseException ex) {
                Logger.getLogger(AssignmentJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (jEditElectronicProductMinimumStockTextField.getText().isEmpty()) {
            intEditProductMinimumStock = SupermarketProducts.getElectronicProductInfoByID(strEditProductID).getMinimumStock();
        } else {
            intEditProductMinimumStock = Integer.valueOf(jEditElectronicProductMinimumStockTextField.getText());
        }
        SupermarketProducts.EditByID(strEditProductID, strEditProductName, strEditProductCategory, dblEditProductWeight, dblEditProductPrice, intEditProductGuaranteeDuration, dateEditProductExpiryDate, dateEditProductDateToOrder, intEditProductMinimumStock);
        SupermarketProducts.PrintProductFile("Electronic");
    }//GEN-LAST:event_jEditElectronicProductButtonActionPerformed

    private void jRemoveElectronicProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRemoveElectronicProductButtonActionPerformed
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        String strEditProductID = jEditElectronicProductIDTextField.getText();
        SupermarketProducts.RemoveByID(strEditProductID, "Electronic");
        SupermarketProducts.PrintProductFile("Electronic");
    }//GEN-LAST:event_jRemoveElectronicProductButtonActionPerformed

    private void jClearOrderHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jClearOrderHistoryButtonActionPerformed
        jOrderedProductsTextArea.setText("");
        SupermarketProducts.clear("Ordered");
        SupermarketProducts.ClearOrderFile();
        JOptionPane.showMessageDialog(null, "Order History Cleared");
    }//GEN-LAST:event_jClearOrderHistoryButtonActionPerformed

    private void jShowOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jShowOrdersButtonActionPerformed
        jOrderedProductsTextArea.setText("");
        SupermarketProducts.clear("Ordered");
        SupermarketProducts.ReadOrderFile();
        SupermarketProducts.Display(jOrderedProductsTextArea, "Ordered");
    }//GEN-LAST:event_jShowOrdersButtonActionPerformed

    private void jPurchaseProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPurchaseProductButtonActionPerformed
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        if (jPurchaseProductIDTextField.getText().isEmpty() || jPurchaseProductAmountTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strPurchaseProductID = jPurchaseProductIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Product")) {
                int intPurchaseAmount = Integer.valueOf(jPurchaseProductAmountTextField.getText());
                if (intPurchaseAmount < 1) {
                    JOptionPane.showMessageDialog(null, "Quantities lower than 1 are not permitted");
                } else {
                    String strProductDestination = jProductDestinationComboBox.getSelectedItem().toString();
                    if (strProductDestination == "Basket") {
                        if ((SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount() + intPurchaseAmount) > SupermarketProducts.getProductInfoByID(strPurchaseProductID).getStock()) {
                            JOptionPane.showMessageDialog(null, "Not enough Stock to fulfill this request" + "\n" + "Current Available Stock: " + SupermarketProducts.getProductInfoByID(strPurchaseProductID).getStock() + "\n" + "Your Basket Quantity for this Product: " + SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount());
                        } else {
                            TempBasketProduct = new Basket();
                            String strProductName = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getName();
                            double dblProductPrice = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getPrice();
                            int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount();
                            int intProductStock = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getStock();
                            TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Basket")) {
                                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket"), "Basket");
                            }
                            SupermarketProducts.addBasketProduct(TempBasketProduct, "Basket");
                            SupermarketProducts.PrintProductFile("Basket");
                            JOptionPane.showMessageDialog(null, "Product Added to Basket");
                        }
                    } else if (strProductDestination == "Wishlist") {
                        TempBasketProduct = new Basket();
                        String strProductName = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getName();
                        double dblProductPrice = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getPrice();
                        int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist").getAmount();
                        int intProductStock = SupermarketProducts.getProductInfoByID(strPurchaseProductID).getStock();
                        TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                        if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Wishlist")) {
                            SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist"), "Wishlist");
                        }
                        SupermarketProducts.addBasketProduct(TempBasketProduct, "Wishlist");
                        SupermarketProducts.PrintWishlistFile(strUserName);
                        JOptionPane.showMessageDialog(null, "Product Added to Wishlist");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Product with that ID found");
            }
        }
    }//GEN-LAST:event_jPurchaseProductButtonActionPerformed

    private void jPurchaseFoodProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPurchaseFoodProductButtonActionPerformed
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        if (jPurchaseFoodProductIDTextField.getText().isEmpty() || jPurchaseFoodProductAmountTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strPurchaseProductID = jPurchaseFoodProductIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Food")) {
                int intPurchaseAmount = Integer.valueOf(jPurchaseFoodProductAmountTextField.getText());
                if (intPurchaseAmount < 1) {
                    JOptionPane.showMessageDialog(null, "Quantities lower than 1 are not permitted");
                } else {
                    String strProductDestination = jFoodProductDestinationComboBox.getSelectedItem().toString();
                    if (strProductDestination == "Basket") {
                        if ((SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount() + intPurchaseAmount) > SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getStock()) {
                            JOptionPane.showMessageDialog(null, "Not enough Stock to fulfill this request" + "\n" + "Current Available Stock: " + SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getStock());
                        } else {
                            TempBasketProduct = new Basket();
                            String strProductName = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getName();
                            double dblProductPrice = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getPrice();
                            int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount();
                            int intProductStock = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getStock();
                            TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Basket")) {
                                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket"), "Basket");
                            }
                            SupermarketProducts.addBasketProduct(TempBasketProduct, "Basket");
                            SupermarketProducts.PrintProductFile("Basket");
                            JOptionPane.showMessageDialog(null, "Food Product Added to Basket");
                        }
                    } else if (strProductDestination == "Wishlist") {
                        TempBasketProduct = new Basket();
                        String strProductName = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getName();
                        double dblProductPrice = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getPrice();
                        int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist").getAmount();
                        int intProductStock = SupermarketProducts.getFoodProductInfoByID(strPurchaseProductID).getStock();
                        TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                        if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Wishlist")) {
                            SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist"), "Wishlist");
                        }
                        SupermarketProducts.addBasketProduct(TempBasketProduct, "Wishlist");
                        SupermarketProducts.PrintWishlistFile(strUserName);
                        JOptionPane.showMessageDialog(null, "Food Product Added to Wishlist");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Food Product with that ID found");
            }
        }
    }//GEN-LAST:event_jPurchaseFoodProductButtonActionPerformed

    private void jPurchaseElectronicProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPurchaseElectronicProductButtonActionPerformed
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        if (jPurchaseElectronicProductIDTextField.getText().isEmpty() || jPurchaseElectronicProductAmountTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strPurchaseProductID = jPurchaseElectronicProductIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Electronic")) {
                int intPurchaseAmount = Integer.valueOf(jPurchaseElectronicProductAmountTextField.getText());
                if (intPurchaseAmount < 1) {
                    JOptionPane.showMessageDialog(null, "Quantities lower than 1 are not permitted");
                } else {
                    String strProductDestination = jElectronicProductDestinationComboBox.getSelectedItem().toString();
                    if (strProductDestination == "Basket") {
                        if ((SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount() + intPurchaseAmount) > SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getStock()) {
                            JOptionPane.showMessageDialog(null, "Not enough Stock to fulfill this request" + "\n" + "Current Available Stock: " + SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getStock());
                        } else {
                            TempBasketProduct = new Basket();
                            String strProductName = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getName();
                            double dblProductPrice = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getPrice();
                            int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket").getAmount();
                            int intProductStock = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getStock();
                            TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                            if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Basket")) {
                                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Basket"), "Basket");
                            }
                            SupermarketProducts.addBasketProduct(TempBasketProduct, "Basket");
                            SupermarketProducts.PrintProductFile("Basket");
                            JOptionPane.showMessageDialog(null, "Electronic Product Added to Basket");
                        }
                    } else if (strProductDestination == "Wishlist") {
                        TempBasketProduct = new Basket();
                        String strProductName = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getName();
                        double dblProductPrice = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getPrice();
                        int intCurrentProductAmount = SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist").getAmount();
                        int intProductStock = SupermarketProducts.getElectronicProductInfoByID(strPurchaseProductID).getStock();
                        TempBasketProduct.Edit(strPurchaseProductID, strProductName, dblProductPrice, intProductStock, intPurchaseAmount, intCurrentProductAmount);
                        if (SupermarketProducts.checkForProduct(strPurchaseProductID, "Wishlist")) {
                            SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strPurchaseProductID, "Wishlist"), "Wishlist");
                        }
                        SupermarketProducts.addBasketProduct(TempBasketProduct, "Wishlist");
                        SupermarketProducts.PrintWishlistFile(strUserName);
                        JOptionPane.showMessageDialog(null, "Electronic Product Added to Wishlist");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Electronic Product with that ID found");
            }
        }
    }//GEN-LAST:event_jPurchaseElectronicProductButtonActionPerformed

    private void jOrderCheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOrderCheckButtonActionPerformed
        SupermarketProducts.CheckForMinimalStock("Product");
        SupermarketProducts.CheckForMinimalStock("Food");
        SupermarketProducts.CheckForMinimalStock("Electronic");
    }//GEN-LAST:event_jOrderCheckButtonActionPerformed

    private void jOrderProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOrderProductButtonActionPerformed
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        if (jOrderProductIDTextField.getText().isEmpty() || jAmountToBeOrderedTextField.getText().isEmpty() || jManufacturerStreetTextField.getText().isEmpty() || jManufacturerHouseNumberTextField.getText().isEmpty() || jManufacturerTownTextField.getText().isEmpty() || jManufacturerAreaTextField.getText().isEmpty() || jManufacturerPostcodeTextField.getText().isEmpty() || jManufacturerCountryTextField.getText().isEmpty() || jDeliveryCompanyTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strArrayList = "Product";
            String strproductType = jOrderTypeOfProductComboBox.getSelectedItem().toString();
            switch (strproductType) {
                case "General":
                    strArrayList = "Product";
                    break;
                case "Food":
                    strArrayList = "Food";
                    break;
                case "Electronic":
                    strArrayList = "Electronic";
                    break;
            }
            String strOrderProductID = jOrderProductIDTextField.getText();
            String strManufacturerStreet = jManufacturerStreetTextField.getText();
            int intManufacturerHouseNo = Integer.valueOf(jManufacturerHouseNumberTextField.getText());
            String strManufacturerTown = jManufacturerTownTextField.getText();
            String strManufacturerArea = jManufacturerAreaTextField.getText();
            String strManufacturerPostcode = jManufacturerPostcodeTextField.getText();
            String strManufacturerCountry = jManufacturerCountryTextField.getText();
            String strDeliveryCompany = jDeliveryCompanyTextField.getText();
            int intOrderStock = Integer.valueOf(jAmountToBeOrderedTextField.getText());
            Date dateOrderDate = new Date();
            Date today = new Date();
            Date dateDeliveryDate = new Date(today.getTime() + 432000000);
            if (SupermarketProducts.OrderByID(strOrderProductID, intOrderStock, dateOrderDate, strArrayList)) {
                double transactionPrice = 0;
                switch (strArrayList) {
                    case "Product":
                        transactionPrice = SupermarketProducts.getProductInfoByID(strOrderProductID).getPrice() * intOrderStock;
                        break;
                    case "Food":
                        transactionPrice = SupermarketProducts.getFoodProductInfoByID(strOrderProductID).getPrice() * intOrderStock;
                        break;
                    case "Electronic":
                        transactionPrice = SupermarketProducts.getElectronicProductInfoByID(strOrderProductID).getPrice() * intOrderStock;
                        break;
                }
                if (BankingSoftware.CheckForSuitableSupermarketFunds(transactionPrice)) {
                    BankingSoftware.orderTransaction(transactionPrice);
                    SupermarketProducts.PrintOrderFile(strOrderProductID, strManufacturerStreet, intManufacturerHouseNo, strManufacturerTown, strManufacturerArea, strManufacturerPostcode, strManufacturerCountry, intOrderStock, strDeliveryCompany, dateOrderDate, dateDeliveryDate, strArrayList);
                    SupermarketProducts.PrintProductFile(strArrayList);
                    SupermarketProducts.PrintProductFile("Basket");
                    SupermarketProducts.PrintWishlistFile(strUserName);
                } else {
                    JOptionPane.showMessageDialog(null, "Not enough funds in the Supermarket Bank Account to facilitate this order" + "\n" + "Cancelling Order...");
                }
            }
        }
    }//GEN-LAST:event_jOrderProductButtonActionPerformed

    private void jBasketModifyAmountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBasketModifyAmountButtonActionPerformed
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        if (jBasketIDTextField.getText().isEmpty() || jBasketQuantityTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strBasketProductID = jBasketIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strBasketProductID, "Basket")) {
                int intBasketQuantity = Integer.valueOf(jBasketQuantityTextField.getText());
                if (intBasketQuantity < 1) {
                    JOptionPane.showMessageDialog(null, "Quantities lower than 1 are not permitted");
                } else {
                    if (intBasketQuantity > SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket").getStock()) {
                        JOptionPane.showMessageDialog(null, "Not enough stock to fulfill that request" + "\n" + "Current Stock: " + SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket").getStock());
                    } else {
                        TempBasketProduct = new Basket();
                        String strBasketProductName = SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket").getName();
                        double dblBasketProductPrice = SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket").getPrice();
                        int intProductStock = SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket").getStock();
                        TempBasketProduct.Edit(strBasketProductID, strBasketProductName, dblBasketProductPrice, intProductStock, intBasketQuantity, 0);
                        SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket"), "Basket");
                        SupermarketProducts.addBasketProduct(TempBasketProduct, "Basket");
                        SupermarketProducts.PrintProductFile("Basket");
                        jBasketTextArea.setText("");
                        SupermarketProducts.clear("Basket");
                        SupermarketProducts.ReadProductFile("Basket");
                        SupermarketProducts.Display(jBasketTextArea, "Basket");
                        jBasketTextArea.append("Total Quantity: " + SupermarketProducts.getTotalQuantity() + "\n");
                        jBasketTextArea.append("Unique Products: " + SupermarketProducts.getUniqueProductCount() + "\n");
                        jBasketTextArea.append("Sum Total (£): " + SupermarketProducts.getTotalPrice());
                        JOptionPane.showMessageDialog(null, "Basket updated");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Basket Product with that ID found");
            }
        }
    }//GEN-LAST:event_jBasketModifyAmountButtonActionPerformed

    private void jDisplayBasketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayBasketButtonActionPerformed
        jBasketTextArea.setText("");
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        SupermarketProducts.Display(jBasketTextArea, "Basket");
        jBasketTextArea.append("Total Quantity: " + SupermarketProducts.getTotalQuantity() + "\n");
        jBasketTextArea.append("Unique Products: " + SupermarketProducts.getUniqueProductCount() + "\n");
        jBasketTextArea.append("Sum Total (£): " + SupermarketProducts.getTotalPrice());
    }//GEN-LAST:event_jDisplayBasketButtonActionPerformed

    private void jBasketRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBasketRemoveButtonActionPerformed
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        if (jBasketIDTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill the ID Field");
        } else {
            String strBasketProductID = jBasketIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strBasketProductID, "Basket")) {
                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strBasketProductID, "Basket"), "Basket");
                SupermarketProducts.PrintProductFile("Basket");
                jBasketTextArea.setText("");
                SupermarketProducts.clear("Basket");
                SupermarketProducts.ReadProductFile("Basket");
                SupermarketProducts.Display(jBasketTextArea, "Basket");
                jBasketTextArea.append("Total Quantity: " + SupermarketProducts.getTotalQuantity() + "\n");
                jBasketTextArea.append("Unique Products: " + SupermarketProducts.getUniqueProductCount() + "\n");
                jBasketTextArea.append("Sum Total (£): " + SupermarketProducts.getTotalPrice());
                JOptionPane.showMessageDialog(null, "Basket Product Removed");
            } else {
                JOptionPane.showMessageDialog(null, "No Basket Product with that ID found");
            }
        }
    }//GEN-LAST:event_jBasketRemoveButtonActionPerformed

    private void jDisplayWishlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDisplayWishlistButtonActionPerformed
        jWishlistTextArea.setText("");
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        SupermarketProducts.Display(jWishlistTextArea, "Wishlist");
    }//GEN-LAST:event_jDisplayWishlistButtonActionPerformed

    private void jWishlistModifyAmountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWishlistModifyAmountButtonActionPerformed
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        if (jWishlistIDTextField.getText().isEmpty() || jWishlistQuantityTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all required fields");
        } else {
            String strWishlistProductID = jWishlistIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strWishlistProductID, "Wishlist")) {
                int intBasketQuantity = Integer.valueOf(jWishlistQuantityTextField.getText());
                if (intBasketQuantity < 1) {
                    JOptionPane.showMessageDialog(null, "Quantities lower than 1 are not permitted");
                } else {
                    TempBasketProduct = new Basket();
                    String strWishlistProductName = SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getName();
                    double dblWishlistProductPrice = SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getPrice();
                    int intProductStock = SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getStock();
                    TempBasketProduct.Edit(strWishlistProductID, strWishlistProductName, dblWishlistProductPrice, intProductStock, intBasketQuantity, 0);
                    SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist"), "Wishlist");
                    SupermarketProducts.addBasketProduct(TempBasketProduct, "Wishlist");
                    SupermarketProducts.PrintWishlistFile(strUserName);
                    jWishlistTextArea.setText("");
                    SupermarketProducts.clear("Wishlist");
                    SupermarketProducts.ReadWishlistFile(strUserName);
                    SupermarketProducts.Display(jWishlistTextArea, "Wishlist");
                    JOptionPane.showMessageDialog(null, "Wishlist updated");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Wishlist Product with that ID found");
            }
        }
    }//GEN-LAST:event_jWishlistModifyAmountButtonActionPerformed

    private void jWishlistRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWishlistRemoveButtonActionPerformed
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        if (jWishlistIDTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill the ID Field");
        } else {
            String strWishlistProductID = jWishlistIDTextField.getText();
            if (SupermarketProducts.checkForProduct(strWishlistProductID, "Wishlist")) {
                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist"), "Wishlist");
                SupermarketProducts.PrintWishlistFile(strUserName);
                jWishlistTextArea.setText("");
                SupermarketProducts.clear("Wishlist");
                SupermarketProducts.ReadWishlistFile(strUserName);
                SupermarketProducts.Display(jWishlistTextArea, "Basket");
                JOptionPane.showMessageDialog(null, "Basket Product Removed");
            } else {
                JOptionPane.showMessageDialog(null, "No Wishlist Product with that ID found");
            }

        }
    }//GEN-LAST:event_jWishlistRemoveButtonActionPerformed

    private void jWishlistTransferButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jWishlistTransferButtonActionPerformed
        SupermarketProducts.clear("Product");
        SupermarketProducts.ReadProductFile("Product");
        SupermarketProducts.clear("Food");
        SupermarketProducts.ReadProductFile("Food");
        SupermarketProducts.clear("Electronic");
        SupermarketProducts.ReadProductFile("Electronic");
        SupermarketProducts.clear("Wishlist");
        SupermarketProducts.ReadWishlistFile(strUserName);
        SupermarketProducts.clear("Basket");
        SupermarketProducts.ReadProductFile("Basket");
        if (jWishlistIDTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill the ID Field");
        } else {
            String strWishlistProductID = jWishlistIDTextField.getText();
            if ((SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Basket").getAmount() + SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getAmount()) > SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getStock()) {
                JOptionPane.showMessageDialog(null, "There is not enough stock of that Product to facilitate this request" + "\n" + "Current Stock: " + SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getStock() + "\n" + "Requested Quantity (Including Amount in Basket): " + (SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Basket").getAmount() + SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getAmount()) + "\n" + "Please decrement Total Quantity beneath Stock and try again");
            } else {
                TempBasketProduct = new Basket();
                TempBasketProduct.Edit(strWishlistProductID, SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getName(), SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getPrice(), SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getStock(), SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Basket").getAmount(), SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist").getAmount());
                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Basket"), "Basket");
                SupermarketProducts.removeBasketProduct(SupermarketProducts.getBasketProductInfoByID(strWishlistProductID, "Wishlist"), "Wishlist");
                SupermarketProducts.addBasketProduct(TempBasketProduct, "Basket");
                SupermarketProducts.PrintWishlistFile(strUserName);
                SupermarketProducts.PrintProductFile("Basket");
                jWishlistTextArea.setText("");
                SupermarketProducts.clear("Wishlist");
                SupermarketProducts.ReadWishlistFile(strUserName);
                SupermarketProducts.Display(jWishlistTextArea, "Wishlist");
                jBasketTextArea.setText("");
                SupermarketProducts.clear("Basket");
                SupermarketProducts.ReadProductFile("Basket");
                SupermarketProducts.Display(jBasketTextArea, "Basket");
                jBasketTextArea.append("Total Quantity: " + SupermarketProducts.getTotalQuantity() + "\n");
                jBasketTextArea.append("Unique Products: " + SupermarketProducts.getUniqueProductCount() + "\n");
                jBasketTextArea.append("Sum Total (£): " + SupermarketProducts.getTotalPrice());
            }
        }
    }//GEN-LAST:event_jWishlistTransferButtonActionPerformed

    private void jCheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckoutButtonActionPerformed
        if (SupermarketProducts.getTotalQuantity() == 0) {
            JOptionPane.showMessageDialog(null, "Basket is empty, please add Product(s) before proceeding to Checkout");
        } else if (strUserRights == "Administrator") {
            jTabbedPane.setSelectedIndex(8);
            datePurchaseDate = new Date();
            SupermarketProducts.clear("Basket");
            SupermarketProducts.ReadProductFile("Basket");
            jPurchaseDateLabel.setText("Purchase Date: " + new SimpleDateFormat("dd-MM-yyyy").format(datePurchaseDate));
            jTotalQuantityLabel.setText("Total Quantity: " + SupermarketProducts.getTotalQuantity());
            jUniqueProductsLabel.setText("Unique Products: " + SupermarketProducts.getUniqueProductCount());
            jTotalPriceLabel.setText("Total Price (£): " + SupermarketProducts.getTotalPrice());
        } else if (strUserRights == "Customer") {
            jTabbedPane.setSelectedIndex(4);
            datePurchaseDate = new Date();
            SupermarketProducts.clear("Basket");
            SupermarketProducts.ReadProductFile("Basket");
            jPurchaseDateLabel.setText("Purchase Date: " + new SimpleDateFormat("dd-MM-yyyy").format(datePurchaseDate));
            jTotalQuantityLabel.setText("Total Quantity: " + SupermarketProducts.getTotalQuantity());
            jUniqueProductsLabel.setText("Unique Products: " + SupermarketProducts.getUniqueProductCount());
            jTotalPriceLabel.setText("Total Price (£): " + SupermarketProducts.getTotalPrice());
        }
    }//GEN-LAST:event_jCheckoutButtonActionPerformed

    private void jTransactionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTransactionButtonActionPerformed
        if (jAccountNumberTextField.getText().isEmpty() || jFirstNameTextField.getText().isEmpty() || jLastNameTextField.getText().isEmpty() || jCityTextField.getText().isEmpty() || jAddressTextField.getText().isEmpty() || jPostCodeTextField.getText().isEmpty() || jPhoneNumberTextField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill all fields");
        } else {
            int intAccountNumber = Integer.valueOf(jAccountNumberTextField.getText());
            String strFirstName = jFirstNameTextField.getText();
            String strLastName = jLastNameTextField.getText();
            String strCity = jCityTextField.getText();
            String strAddress = jAddressTextField.getText();
            String strPostcode = jPostcodeTextField.getText();
            String strCountry = jCountryComboBox.getSelectedItem().toString();
            long longPhoneNumber = Long.valueOf(jPhoneNumberTextField.getText());
            if (BankingSoftware.CheckForCurrentAccount(strFirstName, strLastName, intAccountNumber)) {
                if (BankingSoftware.CheckForSuitableFunds(strFirstName, strLastName, intAccountNumber, SupermarketProducts.getTotalPrice())) {
                    accountInfo.EditAccountInfo(intAccountNumber, strFirstName, strLastName, strCity, strAddress, strPostcode, strCountry, longPhoneNumber);
                    BankingSoftware.bankingSoftwareTransaction(strFirstName, strLastName, intAccountNumber, SupermarketProducts.getTotalPrice());
                    jAccountDetailsAccountNumberLabel.setText("Account Number: " + accountInfo.getAccountNumber());
                    jAccountDetailsFirstNameLabel.setText("First Name: " + accountInfo.getFirstName());
                    jAccountDetailsLastNameLabel.setText("Last Name: " + accountInfo.getLastName());
                    jAccountDetailsAddressLabel.setText("Address: " + accountInfo.getAddress());
                    jAccountDetailsCityLabel.setText("City: " + accountInfo.getCity());
                    jAccountDetailsPostcodeLabel.setText("Postcode: " + accountInfo.getPostcode());
                    jAccountDetailsCountryLabel.setText("Country: " + accountInfo.getCountry());
                    jAccountDetailsPhoneNumberLabel.setText("Phone Number: " + accountInfo.getPhoneNumber());
                    SupermarketProducts.clear("Basket");
                    SupermarketProducts.ReadProductFile("Basket");
                    SupermarketProducts.Display(jPurchaseHistoryTextArea, "Basket");
                    jPurchaseHistoryTextArea.append("Purchase Date: " + new SimpleDateFormat("dd-MM-yyyy").format(datePurchaseDate) + "\n");
                    jPurchaseHistoryTextArea.append("Total Quantity: " + SupermarketProducts.getTotalQuantity() + "\n");
                    jPurchaseHistoryTextArea.append("Unique Products: " + SupermarketProducts.getUniqueProductCount() + "\n");
                    jPurchaseHistoryTextArea.append("Sum Total (£): " + SupermarketProducts.getTotalPrice() + "\n" + "\n" + "\n");
                    SupermarketProducts.PrintPurchaseHistory(datePurchaseDate);
                    SupermarketProducts.decrementStock();
                    SupermarketProducts.PrintProductFile("Product");
                    SupermarketProducts.PrintProductFile("Food");
                    SupermarketProducts.PrintProductFile("Electronic");
                    SupermarketProducts.ClearProductFile("Basket");
                    SupermarketProducts.clear("Product");
                    SupermarketProducts.ReadProductFile("Product");
                    SupermarketProducts.clear("Food");
                    SupermarketProducts.ReadProductFile("Food");
                    SupermarketProducts.clear("Electronic");
                    SupermarketProducts.ReadProductFile("Electronic");
                    SupermarketProducts.clear("Basket");
                    SupermarketProducts.ReadProductFile("Basket");
                    jBasketTextArea.setText("");
                    JOptionPane.showMessageDialog(null, "Transaction Complete");
                    if (strUserRights == "Administrator") {
                        jTabbedPane.setSelectedIndex(7);
                    } else if (strUserRights == "Customer") {
                        jTabbedPane.setSelectedIndex(3);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Not enough funds in that Current Account to complete this Order");
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Current Account registered with that Account Number, First Name or Surname found");
            }
        }
    }//GEN-LAST:event_jTransactionButtonActionPerformed

    private void jOpenBankingSoftwareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenBankingSoftwareButtonActionPerformed
        BankingSoftware.setVisible(true);
    }//GEN-LAST:event_jOpenBankingSoftwareButtonActionPerformed

    private void jOrderBankingSoftwareButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOrderBankingSoftwareButtonActionPerformed
        BankingSoftware.setVisible(true);
    }//GEN-LAST:event_jOrderBankingSoftwareButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AssignmentJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AssignmentJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AssignmentJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AssignmentJFrame.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AssignmentJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JWarningLabel2;
    private javax.swing.JPanel jAccount;
    private javax.swing.JLabel jAccountDetailsAccountNumberLabel;
    private javax.swing.JLabel jAccountDetailsAddressLabel;
    private javax.swing.JLabel jAccountDetailsCityLabel;
    private javax.swing.JLabel jAccountDetailsCountryLabel;
    private javax.swing.JLabel jAccountDetailsFirstNameLabel;
    private javax.swing.JLabel jAccountDetailsLabel;
    private javax.swing.JLabel jAccountDetailsLastNameLabel;
    private javax.swing.JLabel jAccountDetailsPhoneNumberLabel;
    private javax.swing.JLabel jAccountDetailsPostcodeLabel;
    private javax.swing.JLabel jAccountNumberLabel;
    private javax.swing.JTextField jAccountNumberTextField;
    private javax.swing.JButton jAddElectronicProductButton;
    private javax.swing.JButton jAddFoodProductButton;
    private javax.swing.JButton jAddProductButton;
    private javax.swing.JLabel jAddressLabel;
    private javax.swing.JTextField jAddressTextField;
    private javax.swing.JTextField jAmountToBeOrderedTextField;
    private javax.swing.JButton jAssociatedElectronicImageButton;
    private javax.swing.JLabel jAssociatedElectronicImageDescriptorTextLabel;
    private javax.swing.JButton jAssociatedFoodImageButton;
    private javax.swing.JLabel jAssociatedFoodImageDescriptorTextLabel;
    private javax.swing.JButton jAssociatedImageButton;
    private javax.swing.JLabel jAssociatedImageDescriptorTextLabel;
    private javax.swing.JPanel jBasket;
    private javax.swing.JTextField jBasketIDTextField;
    private javax.swing.JLabel jBasketLabel;
    private javax.swing.JButton jBasketModifyAmountButton;
    private javax.swing.JLabel jBasketProductIDLabel;
    private javax.swing.JLabel jBasketProductQuantityLabel;
    private javax.swing.JTextField jBasketQuantityTextField;
    private javax.swing.JButton jBasketRemoveButton;
    private javax.swing.JTextArea jBasketTextArea;
    private javax.swing.JPanel jCheckout;
    private javax.swing.JButton jCheckoutButton;
    private javax.swing.JLabel jCityLabel;
    private javax.swing.JTextField jCityTextField;
    private javax.swing.JButton jClearElectronicProductsButton;
    private javax.swing.JButton jClearFoodProductsButton;
    private javax.swing.JButton jClearOrderHistoryButton;
    private javax.swing.JButton jClearProductsButton;
    private javax.swing.JComboBox jCountryComboBox;
    private javax.swing.JLabel jCountryLabel;
    private javax.swing.JTextField jDateToOrderTextField;
    private javax.swing.JLabel jDeliveryCompanyLabel;
    private javax.swing.JTextField jDeliveryCompanyTextField;
    private javax.swing.JButton jDisplayBasketButton;
    private javax.swing.JButton jDisplayWishlistButton;
    private javax.swing.JLabel jEditElectronicProduceNameLabel;
    private javax.swing.JButton jEditElectronicProductButton;
    private javax.swing.JLabel jEditElectronicProductCategoryLabel;
    private javax.swing.JTextField jEditElectronicProductCategoryTextField;
    private javax.swing.JLabel jEditElectronicProductDateToOrderLabel;
    private javax.swing.JTextField jEditElectronicProductDateToOrderTextField;
    private javax.swing.JLabel jEditElectronicProductExpiryDateLabel;
    private javax.swing.JTextField jEditElectronicProductExpiryDateTextField;
    private javax.swing.JTextField jEditElectronicProductGuaranteeTextField;
    private javax.swing.JTextField jEditElectronicProductIDTextField;
    private javax.swing.JLabel jEditElectronicProductMinimumStockLabel;
    private javax.swing.JTextField jEditElectronicProductMinimumStockTextField;
    private javax.swing.JTextField jEditElectronicProductNameTextField;
    private javax.swing.JLabel jEditElectronicProductPriceLabel;
    private javax.swing.JTextField jEditElectronicProductPriceTextField;
    private javax.swing.JLabel jEditElectronicProductWeightLabel;
    private javax.swing.JTextField jEditElectronicProductWeightTextField;
    private javax.swing.JPanel jEditElectronicProducts;
    private javax.swing.JLabel jEditEletronicProductGuaranteeLabel;
    private javax.swing.JButton jEditFoodProductButton;
    private javax.swing.JLabel jEditFoodProductCategoryLabel;
    private javax.swing.JTextField jEditFoodProductCategoryTextField;
    private javax.swing.JLabel jEditFoodProductDateToOrderLabel;
    private javax.swing.JTextField jEditFoodProductDateToOrderTextField;
    private javax.swing.JLabel jEditFoodProductExpiryDateLabel;
    private javax.swing.JTextField jEditFoodProductExpiryDateTextField;
    private javax.swing.JTextField jEditFoodProductIDTextField;
    private javax.swing.JLabel jEditFoodProductMinimumStockLabel;
    private javax.swing.JTextField jEditFoodProductMinimumStockTextField;
    private javax.swing.JTextField jEditFoodProductNameTextField;
    private javax.swing.JLabel jEditFoodProductPriceLabel;
    private javax.swing.JTextField jEditFoodProductPriceTextField;
    private javax.swing.JLabel jEditFoodProductSoldByDateLabel;
    private javax.swing.JTextField jEditFoodProductSoldByDateTextField;
    private javax.swing.JLabel jEditFoodProductUseByDateLabel;
    private javax.swing.JTextField jEditFoodProductUseByDateTextField;
    private javax.swing.JLabel jEditFoodProductWeightCategoryLabel;
    private javax.swing.JLabel jEditFoodProductWeightLabel;
    private javax.swing.JTextField jEditFoodProductWeightTextField;
    private javax.swing.JPanel jEditFoodProducts;
    private javax.swing.JPanel jEditGeneralProducts;
    private javax.swing.JLabel jEditProduceNameLabel;
    private javax.swing.JLabel jEditProduceNameLabel1;
    private javax.swing.JButton jEditProductButton;
    private javax.swing.JLabel jEditProductCategoryLabel;
    private javax.swing.JTextField jEditProductCategoryTextField;
    private javax.swing.JLabel jEditProductDateToOrderLabel;
    private javax.swing.JTextField jEditProductDateToOrderTextField;
    private javax.swing.JLabel jEditProductExpiryDateLabel;
    private javax.swing.JTextField jEditProductExpiryDateTextField;
    private javax.swing.JTextField jEditProductIDTextField;
    private javax.swing.JLabel jEditProductMinimumStockLabel;
    private javax.swing.JTextField jEditProductMinimumStockTextField;
    private javax.swing.JTextField jEditProductNameTextField;
    private javax.swing.JLabel jEditProductPriceLabel;
    private javax.swing.JTextField jEditProductPriceTextField;
    private javax.swing.JLabel jEditProductWeightLabel;
    private javax.swing.JTextField jEditProductWeightTextField;
    private javax.swing.JPanel jEditProducts;
    private javax.swing.JTabbedPane jEditProductsTabbedPane;
    private javax.swing.JComboBox jEditWeightCategoryComboBox;
    private javax.swing.JTextField jElectronicCategoryTextField;
    private javax.swing.JTextField jElectronicDateToOrderTextField;
    private javax.swing.JTextField jElectronicExpiryDateTextField;
    private javax.swing.JTextField jElectronicGuaranteeTextField;
    private javax.swing.JButton jElectronicImageBackButton;
    private javax.swing.JButton jElectronicImageForwardButton;
    private javax.swing.JLabel jElectronicImageLabel;
    private javax.swing.JPanel jElectronicInput;
    private javax.swing.JTextField jElectronicManufacturerName;
    private javax.swing.JTextField jElectronicMaximumStockTextField;
    private javax.swing.JTextField jElectronicMinimumStockTextField;
    private javax.swing.JTextField jElectronicNameTextField;
    private javax.swing.JTextField jElectronicPriceTextField;
    private javax.swing.JLabel jElectronicProductAssociatedImageLabel;
    private javax.swing.JLabel jElectronicProductCategoryLabel;
    private javax.swing.JLabel jElectronicProductDatetoOrderLabel;
    private javax.swing.JComboBox jElectronicProductDestinationComboBox;
    private javax.swing.JLabel jElectronicProductExpiryDateLabel;
    private javax.swing.JLabel jElectronicProductGuaranteeDurationLabel;
    private javax.swing.JLabel jElectronicProductIDEditBlankLabel;
    private javax.swing.JLabel jElectronicProductIDEditLabel;
    private javax.swing.JTextField jElectronicProductImageIDTextField;
    private javax.swing.JTextArea jElectronicProductListTextArea;
    private javax.swing.JLabel jElectronicProductManufacturerLabel;
    private javax.swing.JLabel jElectronicProductMaximumStockLabel;
    private javax.swing.JLabel jElectronicProductMinimumStockLabel;
    private javax.swing.JLabel jElectronicProductNameLabel;
    private javax.swing.JLabel jElectronicProductPriceLabel;
    private javax.swing.JLabel jElectronicProductWeightLabel;
    private javax.swing.JLabel jElectronicSlideshowLabel;
    private javax.swing.JTextField jElectronicWeightTextField;
    private javax.swing.JTextField jExpiryDateTextField;
    private javax.swing.JLabel jFirstNameLabel;
    private javax.swing.JTextField jFirstNameTextField;
    private javax.swing.JTextField jFoodCategoryTextField;
    private javax.swing.JTextField jFoodDateToOrderTextField;
    private javax.swing.JTextField jFoodExpiryDateTextField;
    private javax.swing.JButton jFoodImageBackButton;
    private javax.swing.JButton jFoodImageForwardButton;
    private javax.swing.JLabel jFoodImageLabel;
    private javax.swing.JPanel jFoodInput;
    private javax.swing.JTextField jFoodManufacturerName;
    private javax.swing.JTextField jFoodMaximumStockTextField;
    private javax.swing.JTextField jFoodMinimumStockTextField;
    private javax.swing.JTextField jFoodNameTextField;
    private javax.swing.JTextField jFoodPriceTextField;
    private javax.swing.JLabel jFoodProductAssociatedImageLabel;
    private javax.swing.JLabel jFoodProductCategoryLabel;
    private javax.swing.JLabel jFoodProductDatetoOrderLabel;
    private javax.swing.JComboBox jFoodProductDestinationComboBox;
    private javax.swing.JLabel jFoodProductExpiryDateLabel;
    private javax.swing.JLabel jFoodProductIDEditBlankLabel;
    private javax.swing.JLabel jFoodProductIDEditLabel;
    private javax.swing.JTextField jFoodProductImageIDTextField;
    private javax.swing.JTextArea jFoodProductListTextArea;
    private javax.swing.JLabel jFoodProductManufacturerLabel;
    private javax.swing.JLabel jFoodProductMaximumStockLabel;
    private javax.swing.JLabel jFoodProductMinimumStockLabel;
    private javax.swing.JLabel jFoodProductNameLabel;
    private javax.swing.JLabel jFoodProductPriceLabel;
    private javax.swing.JLabel jFoodProductSoldByDateLabel;
    private javax.swing.JLabel jFoodProductUseByDateLabel;
    private javax.swing.JLabel jFoodProductWeight;
    private javax.swing.JLabel jFoodProductWeightTypeLabel;
    private javax.swing.JLabel jFoodSlideshowLabel;
    private javax.swing.JTextField jFoodSoldByDateTextField;
    private javax.swing.JTextField jFoodUseByDateTextField;
    private javax.swing.JTextField jFoodWeightTextField;
    private javax.swing.JPanel jGeneralProductInput;
    private javax.swing.JButton jImageBackButton;
    private javax.swing.JButton jImageForwardButton;
    private javax.swing.JLabel jImageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLastNameLabel;
    private javax.swing.JTextField jLastNameTextField;
    private javax.swing.JPanel jLogin;
    private javax.swing.JButton jLoginButton;
    private javax.swing.JPanel jMainPanel;
    private javax.swing.JLabel jManufacturerAddressRequestLabel;
    private javax.swing.JLabel jManufacturerAreaLabel;
    private javax.swing.JTextField jManufacturerAreaTextField;
    private javax.swing.JLabel jManufacturerCountryLabel;
    private javax.swing.JTextField jManufacturerCountryTextField;
    private javax.swing.JLabel jManufacturerHouseNoLabel;
    private javax.swing.JTextField jManufacturerHouseNumberTextField;
    private javax.swing.JLabel jManufacturerPostcodeLabel;
    private javax.swing.JTextField jManufacturerPostcodeTextField;
    private javax.swing.JLabel jManufacturerStreetLabel;
    private javax.swing.JTextField jManufacturerStreetTextField;
    private javax.swing.JLabel jManufacturerTownLabel;
    private javax.swing.JTextField jManufacturerTownTextField;
    private javax.swing.JTextField jMaximumStockTextField;
    private javax.swing.JTextField jMinimumStockTextField;
    private javax.swing.JButton jOpenBankingSoftwareButton;
    private javax.swing.JButton jOrderBankingSoftwareButton;
    private javax.swing.JButton jOrderCheckButton;
    private javax.swing.JPanel jOrderHistory;
    private javax.swing.JLabel jOrderProductAmountLabel;
    private javax.swing.JButton jOrderProductButton;
    private javax.swing.JTextField jOrderProductIDTextField;
    private javax.swing.JPanel jOrderProducts;
    private javax.swing.JLabel jOrderTimeLabel;
    private javax.swing.JComboBox jOrderTypeOfProductComboBox;
    private javax.swing.JTextArea jOrderedProductsTextArea;
    private javax.swing.JPasswordField jPasswordField;
    private javax.swing.JLabel jPhoneNumberLabel;
    private javax.swing.JTextField jPhoneNumberTextField;
    private javax.swing.JLabel jPostCodeTextField;
    private javax.swing.JTextField jPostcodeTextField;
    private javax.swing.JTextField jPriceTextField;
    private javax.swing.JLabel jProductAssociatedImageLabel;
    private javax.swing.JLabel jProductCategoryLabel;
    private javax.swing.JTextField jProductCategoryTextField;
    private javax.swing.JLabel jProductDatetoOrderLabel;
    private javax.swing.JComboBox jProductDestinationComboBox;
    private javax.swing.JLabel jProductExpiryDateLabel;
    private javax.swing.JLabel jProductIDEditBlankLabel;
    private javax.swing.JLabel jProductIDEditLabel;
    private javax.swing.JLabel jProductIDOrderLabel;
    private javax.swing.JLabel jProductIDOrderLabel1;
    private javax.swing.JTextField jProductImageIDTextField;
    private javax.swing.JPanel jProductInput;
    private javax.swing.JTabbedPane jProductInputTabbedPane;
    private javax.swing.JTextArea jProductListTextArea;
    private javax.swing.JLabel jProductManufacturerLabel;
    private javax.swing.JTextField jProductManufacturerName;
    private javax.swing.JLabel jProductMaximumStockLabel;
    private javax.swing.JLabel jProductMinimumStockLabel;
    private javax.swing.JLabel jProductNameLabel;
    private javax.swing.JTextField jProductNameTextField;
    private javax.swing.JLabel jProductPriceLabel;
    private javax.swing.JLabel jProductWeightLabel;
    private javax.swing.JLabel jPurchaseDateLabel;
    private javax.swing.JLabel jPurchaseElectronicProductAmountLabel;
    private javax.swing.JTextField jPurchaseElectronicProductAmountTextField;
    private javax.swing.JButton jPurchaseElectronicProductButton;
    private javax.swing.JLabel jPurchaseElectronicProductDestinationLabel;
    private javax.swing.JLabel jPurchaseElectronicProductIDLabel;
    private javax.swing.JTextField jPurchaseElectronicProductIDTextField;
    private javax.swing.JLabel jPurchaseFoodProductAmountLabel;
    private javax.swing.JTextField jPurchaseFoodProductAmountTextField;
    private javax.swing.JButton jPurchaseFoodProductButton;
    private javax.swing.JLabel jPurchaseFoodProductDestinationLabel;
    private javax.swing.JLabel jPurchaseFoodProductIDLabel;
    private javax.swing.JTextField jPurchaseFoodProductIDTextField;
    private javax.swing.JLabel jPurchaseHistoryLabel;
    private javax.swing.JTextArea jPurchaseHistoryTextArea;
    private javax.swing.JLabel jPurchaseProductAmountLabel;
    private javax.swing.JTextField jPurchaseProductAmountTextField;
    private javax.swing.JButton jPurchaseProductButton;
    private javax.swing.JLabel jPurchaseProductDestinationLabel;
    private javax.swing.JLabel jPurchaseProductIDLabel;
    private javax.swing.JTextField jPurchaseProductIDTextField;
    private javax.swing.JButton jRegisterButton;
    private javax.swing.JLabel jRegisterExample;
    private javax.swing.JLabel jRegisterInstructionsLabel;
    private javax.swing.JButton jRemoveElectronicProductButton;
    private javax.swing.JButton jRemoveFoodProductButton;
    private javax.swing.JButton jRemoveProductButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel jShowElectronicProducts;
    private javax.swing.JButton jShowElectronicProductsButton;
    private javax.swing.JPanel jShowFoodProducts;
    private javax.swing.JButton jShowFoodProductsButton;
    private javax.swing.JPanel jShowGeneralProducts;
    private javax.swing.JButton jShowOrdersButton;
    private javax.swing.JPanel jShowProducts;
    private javax.swing.JButton jShowProductsButton;
    private javax.swing.JTabbedPane jShowProductsTabbedPane;
    private javax.swing.JLabel jSlideshowLabel;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLabel jTotalPriceLabel;
    private javax.swing.JLabel jTotalQuantityLabel;
    private javax.swing.JButton jTransactionButton;
    private javax.swing.JLabel jUniqueProductsLabel;
    private javax.swing.JTextField jUserNameTextField;
    private javax.swing.JLabel jWarningLabel;
    private javax.swing.JLabel jWarningLabel3;
    private javax.swing.JComboBox jWeightCategoryComboBox;
    private javax.swing.JTextField jWeightTextField;
    private javax.swing.JTextField jWishlistIDTextField;
    private javax.swing.JLabel jWishlistLabel;
    private javax.swing.JButton jWishlistModifyAmountButton;
    private javax.swing.JLabel jWishlistProductIDLabel;
    private javax.swing.JLabel jWishlistProductQuantityLabel;
    private javax.swing.JTextField jWishlistQuantityTextField;
    private javax.swing.JButton jWishlistRemoveButton;
    private javax.swing.JTextArea jWishlistTextArea;
    private javax.swing.JButton jWishlistTransferButton;
    // End of variables declaration//GEN-END:variables
}
